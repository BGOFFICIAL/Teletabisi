[{"C:\\Users\\npral\\OneDrive\\Radna površina\\Spring\\web\\src\\index.js":"1","C:\\Users\\npral\\OneDrive\\Radna površina\\Spring\\web\\src\\App.js":"2","C:\\Users\\npral\\OneDrive\\Radna površina\\Spring\\web\\src\\reportWebVitals.js":"3","C:\\Users\\npral\\OneDrive\\Radna površina\\Spring\\web\\src\\util\\useLocalStorage.js":"4","C:\\Users\\npral\\OneDrive\\Radna površina\\Spring\\web\\src\\Loginic\\Login.js":"5","C:\\Users\\npral\\OneDrive\\Radna površina\\Spring\\web\\src\\PrivateRoutes\\index.js":"6","C:\\Users\\npral\\OneDrive\\Radna površina\\Spring\\web\\src\\Settings\\index.js":"7","C:\\Users\\npral\\OneDrive\\Radna površina\\Spring\\web\\src\\User\\index.js":"8","C:\\Users\\npral\\OneDrive\\Radna površina\\Spring\\web\\src\\Adminic\\index.js":"9","C:\\Users\\npral\\OneDrive\\Radna površina\\Spring\\web\\src\\Employee\\index.js":"10","C:\\Users\\npral\\OneDrive\\Radna površina\\Spring\\web\\src\\Welcome\\index.js":"11","C:\\Users\\npral\\OneDrive\\Radna površina\\Spring\\web\\src\\Register\\index.js":"12","C:\\Users\\npral\\OneDrive\\Radna površina\\Spring\\web\\src\\services\\LogOut.js":"13"},{"size":626,"mtime":1700333281122,"results":"14","hashOfConfig":"15"},{"size":2371,"mtime":1700335296689,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1700335307598,"results":"17","hashOfConfig":"15"},{"size":601,"mtime":1700333274138,"results":"18","hashOfConfig":"15"},{"size":6771,"mtime":1700335261448,"results":"19","hashOfConfig":"15"},{"size":328,"mtime":1700335310009,"results":"20","hashOfConfig":"15"},{"size":5755,"mtime":1700335283790,"results":"21","hashOfConfig":"15"},{"size":2823,"mtime":1700333271779,"results":"22","hashOfConfig":"15"},{"size":12414,"mtime":1700335533591,"results":"23","hashOfConfig":"15"},{"size":3307,"mtime":1700333252752,"results":"24","hashOfConfig":"15"},{"size":4725,"mtime":1700333276529,"results":"25","hashOfConfig":"15"},{"size":14481,"mtime":1700335269056,"results":"26","hashOfConfig":"15"},{"size":333,"mtime":1700333265068,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"1pi42ry",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"31"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"31"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"31"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"31"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"31"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"31"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"31"},"C:\\Users\\npral\\OneDrive\\Radna površina\\Spring\\web\\src\\index.js",[],[],["78","79","80","81","82","83"],"C:\\Users\\npral\\OneDrive\\Radna površina\\Spring\\web\\src\\App.js",["84","85","86","87","88"],[],"import { useEffect,useState } from 'react';\nimport './App.css';\nimport { useLocalState } from './util/useLocalStorage';\nimport { Route, Routes,Navigate } from 'react-router-dom';\nimport User from './User';\nimport Welcome from './Welcome';\nimport PrivateRoutes from './PrivateRoutes';\nimport Settings from './Settings';\nimport {jwtDecode} from \"jwt-decode\";\nimport Admin from './Adminic';\nimport Register from './Register';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport Employee from './Employee';\nimport Login from './Loginic/Login';\n\n\n\n\n\n\n\nfunction App() {\n\n  const [jwt,setJwt] = useLocalState(\"\");\n  const [roles,setRoles] = useLocalState(UseGetRoleFromJWT);\n\n\n  function UseGetRoleFromJWT(){\n    \n\n    if(jwt){\n      const decoded = jwtDecode(jwt);\n      console.log(decoded.authorities);\n      console.log(\"Ovo vracas:\"+decoded.roles[0].authority);\n    }\n    \n    if(jwt){\n      const decoded = jwtDecode(jwt);\n      console.log(decoded.authorities);\n      \n      return decoded.roles[0].authority;\n    }\n    else{\n      return \"\";\n    }\n}\n \n\n\n\n  \n  \n\n\n \n\n  /*useEffect(() => {\n    console.log(\"Hello World\");\n    console.log(\"jwt is \" +jwt);\n    if(!jwt){\n      const reqBody= {\n      \"username\": \"example\",\n      \"password\": \"1234\",\n      };\n\n  \n \n  \n      fetch(\"http://3.79.60.253:8080/api/v1/auth/authenticate\", {\n        \"headers\": {\n        \"Content-Type\": \"application/json\",\n      },\n        \"method\": \"POST\",\n        body: JSON.stringify(reqBody),\n        })\n          .then(response => response.json())\n          .then(data => {\n         setJwt(data.token);\n        });\n  }}, [jwt]);\n*/\n\n    \n\n  return (\n        \n          <Routes>\n             <Route path=\"*\" element={<Navigate to=\"/welcome\"  />} />\n             <Route  element={\n             <PrivateRoutes/>} >\n                <Route path=\"/user\" element={<User/>} />\n                <Route path=\"/settings\" element={<Settings/>} />    \n                <Route path=\"/admin\"  element={<Admin/>} />\n                <Route path=\"/employee\"  element={<Employee/>}/>\n             </Route>\n             <Route path=\"/welcome\"  element={<Welcome/>} />\n             <Route path=\"/login\"  element={<Login/>} />\n             <Route path=\"/register\"  element={<Register/>} />\n        \n\n\n          </Routes>\n     \n  );\n\n\n} \n\n    export default App;\n\n","C:\\Users\\npral\\OneDrive\\Radna površina\\Spring\\web\\src\\reportWebVitals.js",[],[],"C:\\Users\\npral\\OneDrive\\Radna površina\\Spring\\web\\src\\util\\useLocalStorage.js",[],[],"C:\\Users\\npral\\OneDrive\\Radna površina\\Spring\\web\\src\\Loginic\\Login.js",["89","90","91","92","93","94","95","96","97","98","99"],[],"import React from 'react';\r\nimport { useLocalState } from '../util/useLocalStorage';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport { LogOut } from '../services/LogOut';\r\nimport {\r\n  Button, Form, Row, Col, Container, Navbar, Nav,\r\n  InputGroup, ButtonGroup, FormLabel, ToggleButton,\r\n  ToggleButtonGroup, NavbarText\r\n} from 'react-bootstrap';\r\n\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\r\n  const [loginSource, setLoginSource] = useState(\"\", \"loginSource\");\r\n  const [roles, setRoles] = useLocalState(UseGetRoleFromJWT);\r\n  const [loginError, setLoginError] = useState(\"\");\r\n\r\n  if (jwt) {\r\n    const decoded = jwtDecode(jwt);\r\n    console.log(decoded.authorities);\r\n    console.log(\"Ovo vracas:\" + decoded.roles[0].authority);\r\n    if (decoded.roles[0].authority === \"ADMIN\") {\r\n      window.location.href = \"/admin\";\r\n      return <div>Loading....</div>\r\n    }\r\n    if (decoded.roles[0].authority === \"USER\") {\r\n      window.location.href = \"/user\";\r\n      return <div>Loading....</div>\r\n    }\r\n  }\r\n\r\n  function UseGetRoleFromJWT() {\r\n    if (jwt) {\r\n      const decoded = jwtDecode(jwt);\r\n      console.log(decoded.authorities);\r\n\r\n      return decoded.roles[0].authority;\r\n    }\r\n    else {\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  console.log(username);\r\n  console.log(password);\r\n  let pom = false;\r\n\r\n\r\n  function sendLoginRequest() {\r\n\r\n\r\n    pom = false;\r\n\r\n    console.log(\"kliknut\")\r\n    const reqBody = {\r\n      \"username\": username,\r\n      \"password\": password,\r\n    };\r\n\r\n\r\n\r\n\r\n    fetch(\"http://3.79.60.253:8080/api/v1/auth/authenticate\", {\r\n      \"headers\": {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      \"method\": \"POST\",\r\n\r\n      body: JSON.stringify(reqBody),\r\n    })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          pom = true;\r\n\r\n          setLoginSource(true);\r\n          return response.json();\r\n\r\n        }\r\n        else {\r\n          console.log(\"nije usao\");\r\n          setLoginError(\"Krivo korisničko ime ili lozinka\");\r\n          return Promise.reject(\"Invalid username or password\");\r\n\r\n        }\r\n      })\r\n      .then((data) => {\r\n        if (pom === true) {\r\n          console.log(\"usao\", data.token);\r\n          setJwt(data.token);\r\n          window.location.href = \"/user\";\r\n        }\r\n      }).catch((error) => { \r\n        setLoginError(\"Krivo korisničko ime ili lozinka\");\r\n        console.error(\"Error:\", error);\r\n      });\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Container className=\"justify-content-md-center\">\r\n      <Navbar bg=\"dark\" data-bs-theme=\"dark\" fixed=\"top\">\r\n\r\n        <Container className=\"justify-content-space-between\">\r\n          <Col xs={1}>\r\n            <Navbar.Brand href=\"#\">\r\n              <img\r\n                src=\"/logofr.jpeg\"\r\n                width=\"150\"\r\n                height=\"75\"\r\n\r\n                className=\"d-inline-block align-items-start rounded\"\r\n                alt=\"logo\"\r\n              />\r\n\r\n            </Navbar.Brand>\r\n          </Col>\r\n          <Col xs={8}>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-center\">\r\n              <Navbar.Brand>Prijava</Navbar.Brand>\r\n            </Navbar.Collapse>\r\n          </Col>\r\n\r\n          <Col xs={1}>\r\n            <Navbar.Collapse className=\"justify-content-end\">\r\n              <Nav>\r\n                <Button variant=\"outline-primary\" onClick={() => window.location.href = \"/welcome\"}>Povratak</Button>\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </Col>\r\n\r\n        </Container>\r\n\r\n      </Navbar>\r\n\r\n      <br /><br /><br /><br /><br /><br /><br /><br />\r\n\r\n      <Form\r\n        noValidate\r\n      >\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col xs={6}>\r\n            <Form.Group md=\"3\" controlId=\"validationCustom01\">\r\n              <Form.Label>Korisničko ime</Form.Label>\r\n              <Form.Control\r\n                placeholder=\"Korisničko ime\"\r\n                type=\"username\"\r\n                id=\"username\"\r\n                value={username}\r\n                onChange={(event) => setUsername(event.target.value)}\r\n                isValid={!username.includes(' ') && username.length > 0}\r\n                isInvalid={username.includes(' ') && username.length > 0}\r\n                required />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Molimo unesite ispravno korisničko ime.\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col xs={6}>\r\n            <Form.Group md=\"3\" controlId=\"validationCustom02\">\r\n              <Form.Label>Lozinka</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Lozinka\"\r\n                required\r\n                id=\"password\"\r\n                value={password}\r\n                onChange={(event) => setPassword(event.target.value)}\r\n\r\n                isValid={password.length > 7 && password.trim().length < 21 && !password.includes(' ')}\r\n                isInvalid={password.length > 0 && !(password.length > 7 && password.trim().length < 21 && !password.includes(' '))}\r\n              />\r\n\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Molimo unesite lozinku u ispravnom formatu!\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col xs={6}>\r\n          {loginError && <div style={{ color: 'red' }}>{loginError}</div>} {/* Prikaz poruke o pogrešci */}\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"justify-content-md-center\">\r\n      <br /><br /><br /> <br />\r\n        <Col xs={2}>\r\n          <Button\r\n            className=\"mb-3\"\r\n            onClick={() => sendLoginRequest()}\r\n            style={{marginTop: '20px'}}\r\n          >Prijavi se</Button>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n\r\n    /*\r\n      <>\r\n      <div>\r\n          <label>Username</label>\r\n          <input type=\"username\" id=\"username\" value={username} onChange={(event) => setUsername(event.target.value)}/>\r\n      </div>\r\n      <div>\r\n          <label>Password</label>\r\n          <input type=\"password\" id=\"password\" value={password} onChange={(event)=> setPassword(event.target.value)}/>\r\n      </div>\r\n      <div>\r\n          <button id=\"submit\" type=\"button\" onClick={() => sendLoginRequest()}>Login</button>\r\n      </div>\r\n\r\n\r\n     \r\n\r\n    </>*/\r\n  );\r\n};\r\n\r\nexport default Login;","C:\\Users\\npral\\OneDrive\\Radna površina\\Spring\\web\\src\\PrivateRoutes\\index.js",["100"],[],"import React from 'react';\r\nimport { useLocalState } from '../util/useLocalStorage';\r\nimport { Navigate ,Outlet} from 'react-router-dom';\r\n\r\nconst PrivateRoutes = () => {\r\n    \r\n    const [jwt,setJwt] = useLocalState(\"\", \"jwt\");\r\n    \r\n    return jwt ? <Outlet/> : <Navigate to=\"/welcome\"/>;\r\n};\r\n\r\nexport default PrivateRoutes;","C:\\Users\\npral\\OneDrive\\Radna površina\\Spring\\web\\src\\Settings\\index.js",["101","102","103","104","105","106","107","108","109","110","111"],[],"import React from 'react';\r\nimport { useLocalState } from '../util/useLocalStorage';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport {\r\n  Button, Form, Row, Col, Container, Navbar, Nav,\r\n  InputGroup, ButtonGroup, FormLabel, ToggleButton,\r\n  ToggleButtonGroup, NavbarText\r\n} from 'react-bootstrap';\r\n\r\n\r\nconst Settings = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n\r\n  const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\r\n  const [loginSource, setLoginSource] = useState(\"\", \"loginSource\");\r\n\r\n\r\n\r\n  console.log(username);\r\n  console.log(password);\r\n  let pom = false;\r\n\r\n\r\n  function sendSettingsRequest() {\r\n\r\n\r\n    console.log(\"kliknut\")\r\n    const reqBody = {\r\n      \"username\": username ,\r\n      \"password\": password,\r\n      \"email\": email,\r\n    };\r\n\r\n    if(reqBody.email===\"\") delete reqBody.email;\r\n    if(reqBody.username===\"\") delete reqBody.username;\r\n    if(reqBody.password===\"\") delete reqBody.password;\r\n\r\n    console.log(\"Bearer :\" + jwt);\r\n\r\n    console.log(reqBody);\r\n\r\n\r\n\r\n\r\n    fetch(\"http://3.79.60.253:8080/api/v1/auth/update\", {\r\n      \"headers\": {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": \"Bearer \" + jwt,\r\n      },\r\n\r\n      \"method\": \"POST\",\r\n      body: JSON.stringify(reqBody),\r\n    })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          return response.json();\r\n        }\r\n        else {\r\n          console.log(\"nije usao\");\r\n          return Promise.reject(\"Invalid username or password\");\r\n\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n      });\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Container className=\"justify-content-md-center\">\r\n      <Navbar bg=\"dark\" data-bs-theme=\"dark\" fixed=\"top\">\r\n\r\n        <Container className=\"justify-content-space-between\">\r\n          <Col xs={1}>\r\n            <Navbar.Brand href=\"#\">\r\n              <img\r\n                src=\"/logofr.jpeg\"\r\n                width=\"150\"\r\n                height=\"75\"\r\n\r\n                className=\"d-inline-block align-items-start rounded\"\r\n                alt=\"logo\"\r\n              />\r\n\r\n            </Navbar.Brand>\r\n          </Col>\r\n          <Col xs={8}>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-center\">\r\n              <Navbar.Brand>Postavke</Navbar.Brand>\r\n            </Navbar.Collapse>\r\n          </Col>\r\n\r\n          <Col xs={1}>\r\n            <Navbar.Collapse className=\"justify-content-end\">\r\n              <Nav>\r\n                <Button variant=\"outline-primary\" onClick={() => window.location.href = \"/user\"}>Povratak</Button>\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </Col>\r\n\r\n        </Container>\r\n\r\n      </Navbar>\r\n\r\n      <br /><br /><br /><br /><br /><br /><br /><br />\r\n\r\n      <Form\r\n        noValidate\r\n      >\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col xs={6}>\r\n            <Form.Group md=\"3\" controlId=\"validationCustom01\">\r\n              <Form.Label>Korisničko ime</Form.Label>\r\n              <Form.Control\r\n                placeholder=\"Korisničko ime\"\r\n                type=\"username\"\r\n                id=\"username\"\r\n                value={username}\r\n                onChange={(event) => setUsername(event.target.value)}\r\n                isValid={!username.includes(' ') && username.length > 0}\r\n                isInvalid={username.includes(' ') && username.length > 0}\r\n                required />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Molimo unesite ispravno korisničko ime.\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col xs={6}>\r\n            <Form.Group md=\"3\" controlId=\"validationCustom02\">\r\n              <Form.Label>Lozinka</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Lozinka\"\r\n                required\r\n                id=\"password\"\r\n                value={password}\r\n                onChange={(event) => setPassword(event.target.value)}\r\n\r\n                isValid={password.length > 7 && password.trim().length < 21 && !password.includes(' ')}\r\n                isInvalid={password.length > 0 && !(password.length > 7 && password.trim().length < 21 && !password.includes(' '))}\r\n              />\r\n\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Molimo unesite ispravnu lozinku.\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col xs={6}>\r\n            <Form.Group md=\"3\" controlId=\"validationCustom03\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                placeholder=\"Email\"\r\n                type=\"email\"\r\n                id=\"email\"\r\n                value={email}\r\n                onChange={(event) => setEmail(event.target.value)}\r\n                required />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Molimo unesite ispravan email.\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n\r\n        <br /><br /><br />\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col xs={2}>\r\n            <Button\r\n              className=\"mb-3\"\r\n             \r\n              onClick={() => sendSettingsRequest()}\r\n            >Promijeni postavke</Button>\r\n          </Col>\r\n\r\n        </Row>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Settings;","C:\\Users\\npral\\OneDrive\\Radna površina\\Spring\\web\\src\\User\\index.js",["112","113","114","115","116","117","118","119","120","121","122","123","124","125","126"],[],"import React from 'react';\r\nimport { useLocalState } from '../util/useLocalStorage';\r\nimport { useEffect, useState } from 'react';\r\nimport { LogOut } from '../services/LogOut';\r\nimport Settings from '../Settings';\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport {\r\n  Button, Form, Row, Col, Container, Navbar,\r\n  Nav, InputGroup, ButtonGroup, FormLabel, ToggleButton, ToggleButtonGroup,\r\n  NavbarText, NavDropdown\r\n} from 'react-bootstrap';\r\n\r\n\r\n\r\n\r\n\r\nconst User = () => {\r\n  const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\r\n  const [roles, setRoles] = useLocalState(UseGetRoleFromJWT);\r\n  if (jwt) {\r\n    try {\r\n      const decoded = jwtDecode(jwt);\r\n\r\n      console.log(decoded.authorities);\r\n      console.log(\"Ovo vracas:\" + decoded.roles[0].authority);\r\n      if (decoded.roles[0].authority === \"ADMIN\") {\r\n        window.location.href = \"/admin\";\r\n        return <div>Loading....</div>\r\n\r\n      } else if (decoded.roles[0].authority !== \"USER\") {\r\n        window.location.href = \"/welcome\";\r\n        return <div>Loading...</div>\r\n\r\n      }\r\n    }\r\n    catch (error) {\r\n      window.location.href = \"/welcome\";\r\n      return <div>Loading....</div>\r\n    }\r\n  }\r\n\r\n  function UseGetRoleFromJWT() {\r\n    if (jwt) {\r\n      const decoded = jwtDecode(jwt);\r\n      console.log(decoded.authorities);\r\n\r\n      return decoded.roles[0].authority;\r\n    }\r\n    else {\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  console.log(\"idem dalje\");\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n    <Container className=\"justify-content-md-center\">\r\n      <Navbar bg=\"dark\" data-bs-theme=\"dark\" fixed=\"top\">\r\n        <Container>\r\n          <Col xs={1}>\r\n            <Navbar.Brand href=\"#\">\r\n              <img\r\n                src=\"/logofr.jpeg\"\r\n                width=\"150\"\r\n                height=\"75\"\r\n\r\n                className=\"d-inline-block align-items-start rounded\"\r\n                alt=\"logo\"\r\n              />\r\n            </Navbar.Brand>\r\n          </Col>\r\n          <Col xs={8}>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-center\">\r\n              <Navbar.Brand>Pacijent</Navbar.Brand>\r\n            </Navbar.Collapse>\r\n          </Col>\r\n          <Col xs={1}>\r\n            <Navbar.Collapse className=\"justify-content-end\">\r\n              <Nav>\r\n                <NavDropdown title=\"Opcije\" id=\"basic-nav-dropdown\">\r\n                  <NavDropdown.Item onClick={() => window.location.href = \"/settings\"}>Postavke</NavDropdown.Item>\r\n                  <NavDropdown.Divider />\r\n                  <NavDropdown.Item onClick={() => LogOut()}>Odjavi se</NavDropdown.Item>\r\n                </NavDropdown>\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </Col>\r\n        </Container>\r\n      </Navbar>\r\n    </Container>\r\n\r\n  );\r\n};\r\n\r\nexport default User;","C:\\Users\\npral\\OneDrive\\Radna površina\\Spring\\web\\src\\Adminic\\index.js",["127","128","129","130","131"],[],"import React from 'react';\r\nimport {LogOut} from '../services/LogOut';\r\nimport { useLocalState } from '../util/useLocalStorage';\r\nimport {jwtDecode} from \"jwt-decode\";\r\nimport \"./adminic.css\";\r\nimport {Button, Table, Form, InputGroup, Alert} from 'react-bootstrap';\r\nimport FormData from 'form-data';\r\n\r\n\r\n\r\n  \r\n\r\n\r\n\r\nconst Index = () => {\r\n    const [jwt,setJwt] = useLocalState(\"\", \"jwt\");\r\n    \r\n    const role = UseGetRoleFromJWT(jwt);\r\n    if(jwt){\r\n      if(role === \"USER\"){\r\n          window.location.href = \"/user\";\r\n          return <div>Loading....</div>\r\n\r\n\r\n\r\n       \r\n      }\r\n      \r\n      else if(role === \"EMPLOYEE\"){\r\n        window.location.href = \"/employee\";\r\n        return <div>Loading....</div>\r\n    }\r\n\r\n      \r\n      else if(role !== \"ADMIN\"){\r\n          window.location.href = \"/welcome\";\r\n          return <div>Loading....</div>\r\n      }\r\n    }\r\n\r\n    function UseGetRoleFromJWT(jwt){\r\n        if(jwt){\r\n            try{\r\n          const decoded = jwtDecode(jwt);\r\n          console.log(decoded.authorities);\r\n          return decoded.roles[0].authority;\r\n            } catch(error){ window.location.href = \"/welcome\";\r\n            return <div>Loading....</div>\r\n            };}\r\n        \r\n        else{\r\n          return \"\";\r\n        }\r\n    \r\n        \r\n  \r\n        }\r\n\r\n\r\n        const Privzapis ={\r\n            \r\n                \"name\": \"\",\r\n                \"surname\": \"\",\r\n                \"email\": \"\",\r\n                \"date_Of_Birth\": \"\",\r\n                \"start_date\": \"\",\r\n                \"gender\":\"\",\r\n        }\r\n\r\n\r\n       \r\n\r\n\r\n    \r\n\r\n\r\n\r\n  \r\n\r\n\r\n\r\n\r\n    \r\n  \r\n  console.log(\"idem dalje\");\r\n\r\n\r\n\r\n\r\n      \r\n      const handleDelete = async (e) =>{      \r\n          e.preventDefault();\r\n  \r\n          const buttonid = \r\n          e.currentTarget.id;\r\n\r\n          \r\n                fetch(\"http://3.79.60.253:8080/api/v1/auth/remove/employee\", {\r\n              headers: {\r\n                  'Content-Type': 'application/json',\r\n                  'Authorization': 'Bearer ' + jwt ,\r\n              },\r\n              method: 'POST',\r\n              body: JSON.stringify({buttonid}),\r\n          });\r\n      }\r\n  \r\n     /* const AddEmploy = async (e) => { \r\n          e.preventDefault();\r\n          const form = e.target;\r\n          const formData = new FormData(form);\r\n          \r\n          const jsonObject = {\r\n            \"username\": e.target.value\r\n          };\r\n  \r\n          formData.forEach((value, key) => {\r\n              jsonObject[key] = value;\r\n  \r\n          });\r\n          \r\n         const response = \r\n          await fetch(\"http://3.79.60.253:8080/api/v1/auth/add/employee\", {\r\n             \r\n              headers: {\r\n                  'Content-Type': 'application/json',\r\n                  \r\n              }, method: 'POST',\r\n              \r\n              body: JSON.stringify(jsonObject),\r\n          });\r\n            if(response.status === 200){\r\n                console.log(\"200 radi\");\r\n                const responseBody = await response.json();\r\n                if (responseBody !== null) {\r\n                    console.log(\"ime promijena\"+responseBody);\r\n                    responseBody.username =\"\";\r\n                    console.log(\"ime promijena\"+responseBody);\r\n                    \r\n                }\r\n            }\r\n           \r\n\r\n            \r\n        };*/\r\n\r\n\r\n        const AddEmploy = async (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const formData = new FormData(form);\r\n        \r\n            const jsonObject = {\r\n                \"username\": e.target.value\r\n            };\r\n        \r\n            formData.forEach((value, key) => {\r\n                jsonObject[key] = value;\r\n            });\r\n        \r\n            try {\r\n                const response = await fetch(\"http://3.79.60.253:8080/api/v1/auth/add/employee\", {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(jsonObject),\r\n                });\r\n        \r\n                if (response.ok) {\r\n                    // Parse the JSON body\r\n                    const responseBody = await response.json();\r\n                    Privzapis.name = responseBody.name;\r\n                    Privzapis.surname = responseBody.surname;\r\n                    Privzapis.email = responseBody.email;\r\n                    Privzapis.date_Of_Birth = responseBody.date_Of_Birth;\r\n                    Privzapis.start_date = responseBody.start_date;\r\n                    Privzapis.gender = responseBody.gender;\r\n                    console.log(\"Response body:\", Privzapis);\r\n        \r\n                    // Now you can work with the responseBody object\r\n                } else {\r\n                    console.error(\"Error:\", response.status);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error:\", error.message);\r\n            }\r\n        };\r\n\r\n\r\n    \r\n  \r\n      /*const handleSubmit = async (e) => {\r\n          e.preventDefault();\r\n          const form = e.target;\r\n          const formData = new FormData(form);\r\n          try {\r\n              const jsonObject = {};\r\n              formData.forEach((value, key) => {\r\n                  jsonObject[key] = value;\r\n              });\r\n              fetch(\"http://3.79.60.253:8080/api/filter/role\", {\r\n                  method: 'POST',\r\n                  headers: {\r\n                      'Content-Type': 'application/json',\r\n                  },\r\n                  body: JSON.stringify(jsonObject),\r\n              });\r\n  \r\n              if (response.ok) {\r\n                  console.log('Uspijesno filtrirano');\r\n              } else {\r\n                  console.error('Nema tog korisnika');\r\n              }\r\n          } catch (error) {\r\n              console.error('Error:', error.message);\r\n          }\r\n        };*/\r\n      \r\n  \r\n      return (\r\n          <div className=\"container\">\r\n              <div className=\"header\"> \r\n                  <img src=\"./logo192.png\" alt=\"\" className=\"image\"/>\r\n                  <button id=\"settings\" type=\"button\" onClick={() => window.location.href = \"/settings\"}>Postavke</button>\r\n                  <button id=\"logout\" type=\"button\" onClick={() => LogOut()}>Odjavi se</button>\r\n              </div>\r\n              <div className=\"employee\">\r\n                  <Table>\r\n                      <thead>\r\n                          <tr>\r\n                              <th colSpan=\"4\" className=\"tablename\">\r\n                                  Zaposlenici\r\n                              </th>                            \r\n                              <th colSpan=\"3\" >\r\n                                  <form action=\"\" method=\"post\" onSubmit={AddEmploy}> {}\r\n                                      <label for=\"username\">Pretraži:  </label>\r\n                                      <input type=\"text\" id=\"employSearch\" name=\"username\"/>\r\n                                      <button type=\"submit\" className=\"removebutton\">Dodaj</button>\r\n                                  </form>\r\n                              </th>\r\n                          </tr>\r\n                          <tr>\r\n                              <th>Ime</th>\r\n                              <th>Prezime</th>\r\n                              <th>E-mail</th>\r\n                              <th>Datum rođenja</th>\r\n                              <th>Datum zapošljivanja</th>\r\n                              <th>Spol</th>\r\n                              <th>Ukloni zaposlenika</th>\r\n                          </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                          {\r\n                              \"Employees\" && \"Employees.length\" > 0 ? (\r\n                                  \"Employees\".map((item) =>  (   \r\n                                    <tr >  \r\n                                      <td>{item.responseBody.name}</td>\r\n                                      <td>{item.responseBody.surname}</td>\r\n                                      <td>{item.responseBody.email}</td>\r\n                                      <td>{item.responseBody.date_of_birth}</td>\r\n                                      <td>{item.responseBody.start_date}</td>\r\n                                      <td>{item.responseBody.gender}</td>\r\n                                      <td><button className=\"removebutton\" id={item.Mail} onClick={handleDelete}>Ukloni</button> </td>\r\n                                    </tr>\r\n                                  ))\r\n                                ) : (\r\n                                  <tr>\r\n                                    <td colSpan=\"6\">Nema zaposlenika</td>\r\n                                  </tr>\r\n                                )\r\n                          }\r\n                      </tbody>\r\n                      \r\n                  </Table>\r\n              </div>\r\n              <div className=\"stats\">\r\n              <Table>\r\n                      <thead>\r\n                          <tr>\r\n                              <th colSpan=\"1\" className=\"tablename\">\r\n                                  Statistika\r\n                              </th>\r\n                              \r\n                              <th colSpan=\"5\" >\r\n                                  <form method=\"get\" /*</th>onSubmit={handleSubmit}*/> {}\r\n                                      <div className=\"filters\">\r\n                                          <label for=\"sex\">Spol:  </label>                                 \r\n                                          <label><input type=\"radio\" value=\"Male\" name=\"sex\"/>Muško </label>\r\n                                          <label><input type=\"radio\" value=\"Female\" name=\"sex\"/>Žena </label>\r\n                                      </div>\r\n                                      <div className=\"filters\">\r\n                                          <label for=\"yearofbith\">    Datum rođenja:  </label>\r\n                                          <input type=\"number\" id=\"statsBirth\" name=\"yearofbith\"/>\r\n                                      </div>     \r\n                                      <div className=\"filters\">\r\n                                          <label for=\"yearofemp\">    Datum zapošljivanja:  </label>\r\n                                          <input type=\"number\" id=\"statsEmploy\" name=\"yearofemp\"/>\r\n                                      </div>                                                    \r\n                                      <div className=\"filters\">\r\n                                          <button type=\"submit\" className=\"removebutton\">Pretraži</button>\r\n                                      </div>\r\n                                      \r\n                                  </form>\r\n                              </th>\r\n                          </tr>\r\n                          <tr>\r\n                              <th>Ime</th>\r\n                              <th>Prezime</th>\r\n                              <th>E-mail</th>\r\n                              <th>Datum rođenja</th>\r\n                              <th>Datum zapošljivanja</th>\r\n                              <th>Spol</th>\r\n                              \r\n                          </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                          {\r\n                              /*Employees && Employees.length > 0 ? (\r\n                                  Employees.map((item) => (\r\n                                    <tr key={item.id}>\r\n                                      <td>{item.Name}</td>\r\n                                      <td>{item.Surname}</td>\r\n                                      <td>{item.Mail}</td>\r\n                                      <td>{item.DateOfBirth}</td>\r\n                                      <td>{item.DateOfEmployement}</td>\r\n                                      <td>{item.Sex}</td>\r\n                                    </tr>\r\n                                  ))\r\n                                ) : (\r\n                                  <tr>\r\n                                    <td colSpan=\"5\">Nema zaposlenika koji odgovaraju uvjetima</td>\r\n                                  </tr>\r\n                                )*/\r\n                          }\r\n                      </tbody>\r\n                  </Table>\r\n              </div>\r\n          </div>\r\n      )\r\n  }\r\n \r\n\r\n\r\nexport default Index;","C:\\Users\\npral\\OneDrive\\Radna površina\\Spring\\web\\src\\Employee\\index.js",["132","133","134","135","136","137","138","139","140","141","142","143","144"],[],"import {\r\n    Button, Form, Row, Col, Container, Navbar,\r\n    Nav, InputGroup, ButtonGroup, FormLabel, ToggleButton, ToggleButtonGroup,\r\n    NavbarText, NavDropdown\r\n} from 'react-bootstrap';\r\nimport { useState } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport { useLocalState } from '../util/useLocalStorage';\r\nimport { useEffect } from 'react';\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport { LogOut } from '../services/LogOut';\r\n\r\n    \r\nconst Employee = () => {\r\n       \r\n    \r\n   \r\n\r\n\r\n    const [jwt,setJwt] = useLocalState(\"\", \"jwt\");\r\n    \r\n    \r\n\r\n    if(jwt){\r\n        const role=UseGetRoleFromJWT(jwt);\r\n        if(role === \"USER\"){\r\n            window.location.href = \"/user\";\r\n            return <div>Loading....</div>\r\n         \r\n        }else if(role === \"ADMIN\"){\r\n            window.location.href = \"/admin\";\r\n            return <div>Loading....</div>\r\n        }\r\n\r\n        else if(role !== \"EMPLOYEE\"){\r\n            window.location.href = \"/welcome\";\r\n            return <div>Loading....</div>\r\n        }\r\n\r\n\r\n\r\n      }\r\n  \r\n      function UseGetRoleFromJWT(jwt){\r\n          if(jwt){\r\n              try{\r\n            const decoded = jwtDecode(jwt);\r\n            console.log(decoded.authorities);\r\n            return decoded.roles[0].authority;\r\n              } catch(error){ window.location.href = \"/welcome\";\r\n              return <div>Loading....</div>\r\n              };}\r\n          \r\n          else{\r\n            return \"\";\r\n          }\r\n      \r\n          \r\n    \r\n          }\r\n  \r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Container className=\"justify-content-md-center\">\r\n            <Navbar bg=\"dark\" data-bs-theme=\"dark\" fixed=\"top\">\r\n                <Container>\r\n                    <Col xs={1}>\r\n                        <Navbar.Brand href=\"#\">\r\n                            <img\r\n                                src=\"/logofr.jpeg\"\r\n                                width=\"150\"\r\n                                height=\"75\"\r\n\r\n                                className=\"d-inline-block align-items-start rounded\"\r\n                                alt=\"logo\"\r\n                            />\r\n                        </Navbar.Brand>\r\n                    </Col>\r\n                    <Col xs={8}>\r\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                        <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-center\">\r\n                            <Navbar.Brand>Djelatnik</Navbar.Brand>\r\n                        </Navbar.Collapse>\r\n                    </Col>\r\n                    <Col xs={1}>\r\n                        <Navbar.Collapse className=\"justify-content-end\">\r\n                            <Nav>\r\n                                <NavDropdown title=\"Opcije\" id=\"basic-nav-dropdown\">\r\n                                    <NavDropdown.Item href=\"/settings\">Postavke</NavDropdown.Item>\r\n                                    <NavDropdown.Divider />\r\n                                    <NavDropdown.Item onClick={() => LogOut()}>Odjavi se</NavDropdown.Item>\r\n                                </NavDropdown>\r\n                            </Nav>\r\n                        </Navbar.Collapse>\r\n                    </Col>\r\n                </Container>\r\n            </Navbar>\r\n        </Container>\r\n    );\r\n}\r\nexport default Employee;","C:\\Users\\npral\\OneDrive\\Radna površina\\Spring\\web\\src\\Welcome\\index.js",["145","146","147","148","149","150","151","152","153","154","155"],[],"import React from 'react';\r\nimport {\r\n  Button, Form, Row, Col, Container, Navbar, Nav, Card,\r\n  InputGroup, ButtonGroup, FormLabel, ToggleButton,\r\n  ToggleButtonGroup, NavbarText\r\n} from 'react-bootstrap';\r\nimport './index.css';\r\nimport { useLocalState, useEffect } from '../util/useLocalStorage';\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport { LogOut } from '../services/LogOut';\r\n\r\nconst Welcome = () => {\r\n  const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\r\n  const [roles, setRoles] = useLocalState(UseGetRoleFromJWT);\r\n  if (jwt) {\r\n    try {\r\n      const role = UseGetRoleFromJWT(jwt);\r\n      \r\n\r\n      if (role=== \"ADMIN\") {\r\n        window.location.href = \"/admin\";\r\n        return <div>Loading....</div>\r\n      }\r\n      else if (role=== \"USER\") {\r\n        window.location.href = \"/user\";\r\n        return <div>Loading....</div>\r\n      }\r\n\r\n      else if(role=== \"EMPLOYEE\"){\r\n        window.location.href = \"/employee\";\r\n        return <div>Loading....</div>\r\n      }\r\n\r\n\r\n    } catch (error) {\r\n      LogOut();\r\n      return <div>Loading....</div>\r\n    };\r\n  }\r\n  function UseGetRoleFromJWT(jwt) {\r\n    if (jwt) {\r\n      const decoded = jwtDecode(jwt);\r\n      console.log(decoded.authorities);\r\n\r\n      return decoded.roles[0].authority;\r\n    }\r\n    else {\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const stil = {\r\n    fontSize: '28px',\r\n    fontWeight: 'bold',\r\n  };\r\n\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Navbar bg=\"dark\" data-bs-theme=\"dark\" fixed=\"top\">\r\n\r\n          <Container className=\"justify-content-space-between\">\r\n            <Col xs={1}>\r\n              <Navbar.Brand href=\"#\">\r\n                <img\r\n                  src=\"/logofr.jpeg\"\r\n                  width=\"150\"\r\n                  height=\"75\"\r\n\r\n                  className=\"d-inline-block align-items-start rounded\"\r\n                  alt=\"logo\"\r\n                />\r\n\r\n              </Navbar.Brand>\r\n            </Col>\r\n            <Col xs={8}>\r\n              <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n              <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-center\">\r\n                <Navbar.Brand style={stil}>Dobrodošli u rehabilitacijski centar</Navbar.Brand>\r\n              </Navbar.Collapse>\r\n            </Col>\r\n            <Col xs={1}>\r\n              <Navbar.Collapse className=\"justify-content-end\">\r\n                <Nav>\r\n                </Nav>\r\n              </Navbar.Collapse>\r\n            </Col>\r\n          </Container>\r\n        </Navbar>\r\n      </Row>\r\n      <br /><br /><br /><br /><br /><br /><br /><br />\r\n      <Row className=\"justify-content-center\">\r\n        <Card style={{ width: '55rem' }}>\r\n          <Card.Body className=\"text-center\">\r\n            <Card.Title>Zahvaljujemo što ste odabrali naš centar</Card.Title>\r\n            <Card.Text>\r\n              Kako biste koristili naše usluge, potrebno se prijaviti. Ako nemate račun, registrirajte se.\r\n            </Card.Text>\r\n            <Button variant=\"primary\"onClick={() => window.location.href = \"/login\"}>Prijava</Button>\r\n            {' '}\r\n            <Button variant=\"primary\" onClick={() => window.location.href = \"/register\"}>Registracija</Button>\r\n          </Card.Body>\r\n        </Card>\r\n      </Row>\r\n    </Container>\r\n\r\n    /*\r\n      <div className=\"container-fluid\">\r\n    \r\n    <div className=\"row row-highlight\">\r\n      <div className=\"col\">\r\n        \r\n        <img src=\"path/to/your/logo.png\" alt=\"Logo\" className=\"logo\" />\r\n      </div>\r\n      <div className=\"col-5\"></div>\r\n      <div className=\"col-3 col-text\">\r\n        <h3>Jwt is {jwt}</h3>\r\n      </div>\r\n      <div className=\"col\"></div>\r\n    </div>\r\n\r\n    \r\n    <div className=\"row row-background\">\r\n      <div className=\"col-3 col-text\">\r\n        <h3>Thank you for choosing us</h3>\r\n      </div>\r\n      <div className=\"col-5\"></div>\r\n      <div className=\"col-3\"></div>\r\n    </div>\r\n\r\n    \r\n    <div className=\"row row-background\">\r\n      <div className=\"col-3 col-text\">\r\n       \r\n        <p>Description of our app goes here.</p>\r\n      </div>\r\n      <div className=\"col-5\"></div>\r\n      <div className=\"col-3\"></div>\r\n    </div>\r\n\r\n    \r\n    <div className=\"row row-background\">\r\n      <div className=\"col-2\"></div>\r\n      <div className=\"col-3\">\r\n      \r\n        <button className=\"btn btn-primary btn-register\">Register</button>\r\n      </div>\r\n      <div className=\"col-2\"></div>\r\n    </div>\r\n\r\n    \r\n    <div className=\"row row-highlight\">\r\n      <div className=\"col\"></div>\r\n      <div className=\"col-5\"></div>\r\n      <div className=\"col-3\">\r\n        \r\n        <button className=\"btn btn-primary btn-login\">Login</button>\r\n      </div>\r\n      <div className=\"col\"></div>\r\n    </div>\r\n  </div>\r\n*/\r\n  );\r\n};\r\n\r\nexport default Welcome;","C:\\Users\\npral\\OneDrive\\Radna površina\\Spring\\web\\src\\Register\\index.js",["156","157","158","159","160","161","162","163"],[],"\r\nimport React from 'react';\r\nimport {\r\n    Button, Form, Row, Col, Container, Navbar, Nav,\r\n    InputGroup, ButtonGroup, FormLabel, ToggleButton,\r\n    ToggleButtonGroup, NavbarText\r\n} from 'react-bootstrap';\r\nimport DatePicker from 'react-datepicker';\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport { useLocalState } from '../util/useLocalStorage';\r\nimport { useState } from 'react';\r\n\r\n\r\nconst Register = () => {\r\n    const [jwt,setJwt] = useLocalState(\"\", \"jwt\");\r\n    const [validated, setValidated] = useState(false);\r\n    const [ime, setIme] = useState('');\r\n    const [prezime, setPrezime] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [lozinka, setLozinka] = useState('');\r\n    const [kime, setKime] = useState('');\r\n    const [dob, setDob] = useState(null);\r\n    const [oib, setOib] = useState('');\r\n    const [spol, setSpol] = useState('');\r\n\r\n    const [registerError, setRegisterError] = useState(\"\");\r\n\r\n    if(jwt){\r\n        const decoded = jwtDecode(jwt);\r\n        console.log(decoded.authorities);\r\n        console.log(\"Ovo vracas:\"+decoded.roles[0].authority );\r\n        if(decoded.roles[0].authority === \"ADMIN\"){\r\n          window.location.href = \"/admin\";\r\n          return <div>Loading....</div>\r\n        }\r\n        if(decoded.roles[0].authority === \"USER\"){\r\n          window.location.href = \"/user\";\r\n          return <div>Loading....</div>\r\n        }\r\n\r\n        if(decoded.roles[0].authority === \"EMPLOYEE\"){\r\n            window.location.href = \"/employee\";\r\n            return <div>Loading....</div>\r\n          }\r\n        \r\n        }\r\n      \r\n\r\n      function UseGetRoleFromJWT(){    \r\n        if(jwt){\r\n          const decoded = jwtDecode(jwt);\r\n          console.log(decoded.authorities);\r\n          \r\n          return decoded.roles[0].authority;\r\n        }\r\n        else{\r\n          return \"\";\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleName = (event) => {\r\n        const Newname = event.target.value;\r\n        const isValidName = Newname.length >= 0 && Newname.trim() !== '';\r\n        setIme(Newname);\r\n        setValidated(isValidName);\r\n    };\r\n\r\n    const handlesurName = (event) => {\r\n        const Newsurname = event.target.value;\r\n        const isValidsurName = Newsurname.length >= 0 && Newsurname.trim() !== '';\r\n        setPrezime(Newsurname);\r\n        setValidated(isValidsurName);\r\n    };\r\n\r\n    const handlePasswordChange = (event) => {\r\n        const novaLozinka = event.target.value;\r\n        const isValidPassword = novaLozinka.length >= 8 && novaLozinka.length <= 20 &&\r\n            novaLozinka.trim() !== '';\r\n        setLozinka(novaLozinka);\r\n        setValidated(isValidPassword);\r\n    };\r\n\r\n    const handleKName = (event) => {\r\n        const NewKname = event.target.value;\r\n        const isValidKName = NewKname.length >= 0 && NewKname.trim() !== '';\r\n        setKime(NewKname);\r\n        setValidated(isValidKName);\r\n    };\r\n\r\n    const handleDateChange = (date) => {\r\n        setDob(date);\r\n        setValidated(false);\r\n    };\r\n\r\n    const handleOibChange = (e) => {\r\n        setOib(e.target.value);\r\n        setValidated(false);\r\n    };\r\n\r\n    const isValidOIB = (oib) => {\r\n        const oibRegex = /^\\d{11}$/;\r\n        return oibRegex.test(oib);\r\n    };\r\n\r\n    const handleGenderChange = (e) => {\r\n        setSpol(e.target.value);\r\n        setValidated(false);\r\n    };\r\n\r\n    let pom2 =false;\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const form = event.currentTarget;\r\n\r\n        if (ime.trim() === '' || prezime.trim() === '' || email.trim() === '' || lozinka.trim() === '' ||\r\n            kime.trim() === '' || dob === null || spol === '' || !isValidOIB(oib) || lozinka.length <= 7 || lozinka.length >= 21) {\r\n            setValidated(true);\r\n            return;\r\n        }\r\n\r\n        if (form.checkValidity() === false) {\r\n            event.stopPropagation();\r\n        } else {\r\n            const formData = {\r\n                firstname: ime,\r\n                lastname: prezime,\r\n                email: email,\r\n                password: lozinka,\r\n                username: kime,\r\n                gender: spol,\r\n                dateOfBirth:dob ,\r\n                oib: oib,\r\n            };\r\n            const jsonData = JSON.stringify(formData);\r\n            console.log(\"Krenuli sa slanjem\"+jsonData);\r\n\r\n            try{\r\n                pom2=false;\r\n\r\n            fetch(\"http://3.79.60.253:8080/api/v1/auth/register\" ,{\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                method: \"POST\",\r\n                body: jsonData,\r\n            })\r\n            .then(response => {\r\n                if(response.status === 200){\r\n                pom2=true;\r\n                return response.json();\r\n            }else{\r\n                setRegisterError(\"Nije prava osoba u našoj bazi\");\r\n                return Promise.reject(\"Nije prava osoba u našoj bazi\")\r\n            } \r\n            \r\n        }).then((data) => {\r\n            if(pom2===true){\r\n            window.location.href = \"/login\";\r\n             }}).catch((error) => {\r\n                setRegisterError(\"Neispravna registracija\");\r\n                console.error(\"Error:\",error)});\r\n\r\n        setValidated(true);\r\n       \r\n        }\r\n            catch(error){\r\n\r\n                \r\n                \r\n                return Promise.reject(\"Invalidna registracija\");\r\n\r\n                ;\r\n            }\r\n            \r\n    };\r\n   \r\n    };\r\n\r\n\r\n     return ( \r\n    <Container className=\"justify-content-md-center\">\r\n    <Navbar bg=\"dark\" data-bs-theme=\"dark\" fixed=\"top\">\r\n        <Container className=\"justify-content-space-between\">\r\n            <Col xs={1}>\r\n                <Navbar.Brand href=\"#\">\r\n                    <img\r\n                        src=\"/logofr.jpeg\"\r\n                        width=\"150\"\r\n                        height=\"75\"\r\n\r\n                        className=\"d-inline-block align-items-start rounded\"\r\n                        alt=\"logo\"\r\n                    />\r\n\r\n                </Navbar.Brand>\r\n            </Col>\r\n            <Col xs={8}>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-center\">\r\n                    <Navbar.Brand>Registracija</Navbar.Brand>\r\n                </Navbar.Collapse>\r\n            </Col>\r\n\r\n            <Col xs={1}>\r\n                <Navbar.Collapse className=\"justify-content-end\">\r\n                    <Nav>\r\n                        <Button variant=\"outline-primary\"\r\n                        onClick={() => window.location.href = \"/welcome\"}>Povratak </Button>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Col>\r\n\r\n        </Container>\r\n    </Navbar>\r\n    <br /><br /><br /><br /><br /><br /><br />\r\n\r\n\r\n    <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n        <Row className=\"justify-content-md-center\">\r\n            <Col xs={3}>\r\n                <Form.Group md=\"4\" controlId=\"validationCustom01\">\r\n                    <Form.Label>Ime</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"Ime\"\r\n                        onChange={handleName}\r\n                        isValid={false}\r\n                    />\r\n\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Molimo unesite ime.\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n            </Col>\r\n            <Col xs={3}>\r\n                <Form.Group md=\"4\" controlId=\"validationCustom02\">\r\n                    <Form.Label>Prezime</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"Prezime\"\r\n                        onChange={handlesurName}\r\n                        isValid={false}\r\n                    />\r\n\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Molimo unesite prezime.\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n            </Col>\r\n\r\n\r\n        </Row>\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n            <Col xs={3}>\r\n                <Form.Group md=\"6\" controlId=\"validationCustom03\">\r\n                    <Form.Label>OIB</Form.Label>\r\n                    <Form.Control type=\"text\"\r\n                        placeholder=\"OIB\"\r\n                        required\r\n                        value={oib}\r\n                        onChange={handleOibChange}\r\n                        isInvalid={validated && !isValidOIB(oib)}\r\n                        isValid={validated && isValidOIB(oib)}\r\n                        aria-describedby=\"uputeOib\"\r\n                    />\r\n\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Molimo unesite ispravan OIB.\r\n                    </Form.Control.Feedback>\r\n                    <Form.Text id=\"uputeOib\" muted>\r\n                        OIB mora sadžavati točno 11 znamenaka.\r\n                    </Form.Text>\r\n                </Form.Group>\r\n            </Col>\r\n            <Col xs={3}>\r\n                <Form.Group md=\"3\" controlId=\"validationCustom06\">\r\n                    <Form.Label>Korisničko ime</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Korisničko ime\"\r\n                        onChange={handleKName}\r\n                        isValid={false}\r\n                        required />\r\n\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Molimo unesite korisničko ime.\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n            </Col>\r\n\r\n        </Row>\r\n\r\n\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n            <Col xs={6}>\r\n                <Form.Group md=\"3\" controlId=\"validationCustom04\">\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control\r\n                        type=\"email\"\r\n                        placeholder=\"Email\"\r\n                        required\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Molimo unesite ispravan email.\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n            </Col>\r\n        </Row>\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n            <Col xs={6}>\r\n                <Form.Group md=\"3\" controlId=\"validationCustom05\">\r\n                    <Form.Label>Lozinka</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        placeholder=\"Lozinka\"\r\n                        required\r\n                        value={lozinka}\r\n                        onChange={handlePasswordChange}\r\n                        aria-describedby=\"upute\"\r\n                        isValid={false}\r\n                    />\r\n                    <Form.Text id=\"upute\" muted>\r\n                        Vaša lozinka mora biti duga 8-20 znakova i ne smije sadžavati razmake.\r\n                    </Form.Text>\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Molimo unesite ispravnu lozinku.\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n            </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-md-center\">\r\n            <Col xs={3}>\r\n                <br />\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Spol</Form.Label>\r\n                    <div>\r\n                        <Form.Check\r\n                            inline\r\n                            required\r\n                            label=\"Muško\"\r\n                            name=\"gender\"\r\n                            type=\"radio\"\r\n                            id=\"gender-male\"\r\n                            value=\"muško\"\r\n                            checked={spol === 'muško'}\r\n                            onChange={handleGenderChange}\r\n                            isInvalid={validated && spol === ''}\r\n                        />\r\n                        <Form.Check\r\n                            inline\r\n                            required\r\n                            label=\"Žensko\"\r\n                            name=\"gender\"\r\n                            type=\"radio\"\r\n                            id=\"gender-female\"\r\n                            value=\"žensko\"\r\n                            checked={spol === 'žensko'}\r\n                            onChange={handleGenderChange}\r\n                            isInvalid={validated && spol === ''}\r\n                        />\r\n                    </div>\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Molimo odaberite spol.\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n            </Col>\r\n\r\n            <Col xs={3}>\r\n                <br />\r\n                <Form.Group className=\"mb-3\" controlId=\"dob\">\r\n                    <Form.Label>Datum rođenja</Form.Label>\r\n                    <br />\r\n                    <DatePicker\r\n                        required\r\n                        selected={dob}\r\n                        onChange={handleDateChange}\r\n                        dateFormat=\"dd/MM/yyyy\"\r\n                        isClearable\r\n                        placeholderText=\"Odaberite datum rođenja\"\r\n                    />\r\n                </Form.Group>\r\n            </Col>\r\n        </Row>\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n        <Col xs={6}>\r\n          {registerError && <div style={{ color: 'red' }}>{registerError}</div>} {/* Prikaz poruke o pogrešci */}\r\n        </Col>\r\n      </Row>\r\n       \r\n\r\n        <br /><br /><br />\r\n        <Row className=\"justify-content-md-center\">\r\n            <Col xs={2}>\r\n                <Button className=\"mb-3\" type=\"submit\" >Registriraj se</Button>\r\n            </Col>\r\n\r\n        </Row>\r\n    </Form>\r\n    <br /><br /><br />\r\n    <Row className=\"text-end\">\r\n        <p>\r\n            Već ste registrirani? Kliknite{' '}\r\n            <a href=\"/login\">\r\n                ovdje.\r\n            </a>\r\n        </p>\r\n    </Row>\r\n</Container >\r\n\r\n\r\n\r\n     );\r\n};\r\n\r\nexport default Register;","C:\\Users\\npral\\OneDrive\\Radna površina\\Spring\\web\\src\\services\\LogOut.js",["164"],[],"import React from 'react';\r\n\r\nfunction LogOut() {\r\n    let jwtToken = localStorage.getItem('jwt');\r\n    jwtToken = '\"\"';\r\n    localStorage.setItem('jwt',jwtToken);\r\n\r\n    let roles = localStorage.getItem('roles');\r\n    roles = '\"\"';\r\n    localStorage.setItem('roles',roles);\r\n\r\n\r\n    window.location.reload();\r\n}\r\n\r\nexport {LogOut} ;",{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":1,"column":10,"nodeType":"179","messageId":"180","endLine":1,"endColumn":19},{"ruleId":"177","severity":1,"message":"181","line":1,"column":20,"nodeType":"179","messageId":"180","endLine":1,"endColumn":28},{"ruleId":"177","severity":1,"message":"182","line":25,"column":14,"nodeType":"179","messageId":"180","endLine":25,"endColumn":20},{"ruleId":"177","severity":1,"message":"183","line":26,"column":10,"nodeType":"179","messageId":"180","endLine":26,"endColumn":15},{"ruleId":"177","severity":1,"message":"184","line":26,"column":16,"nodeType":"179","messageId":"180","endLine":26,"endColumn":24},{"ruleId":"177","severity":1,"message":"178","line":3,"column":10,"nodeType":"179","messageId":"180","endLine":3,"endColumn":19},{"ruleId":"177","severity":1,"message":"185","line":6,"column":10,"nodeType":"179","messageId":"180","endLine":6,"endColumn":16},{"ruleId":"177","severity":1,"message":"186","line":9,"column":3,"nodeType":"179","messageId":"180","endLine":9,"endColumn":13},{"ruleId":"177","severity":1,"message":"187","line":9,"column":15,"nodeType":"179","messageId":"180","endLine":9,"endColumn":26},{"ruleId":"177","severity":1,"message":"188","line":9,"column":28,"nodeType":"179","messageId":"180","endLine":9,"endColumn":37},{"ruleId":"177","severity":1,"message":"189","line":9,"column":39,"nodeType":"179","messageId":"180","endLine":9,"endColumn":51},{"ruleId":"177","severity":1,"message":"190","line":10,"column":3,"nodeType":"179","messageId":"180","endLine":10,"endColumn":20},{"ruleId":"177","severity":1,"message":"191","line":10,"column":22,"nodeType":"179","messageId":"180","endLine":10,"endColumn":32},{"ruleId":"177","severity":1,"message":"192","line":19,"column":10,"nodeType":"179","messageId":"180","endLine":19,"endColumn":21},{"ruleId":"177","severity":1,"message":"183","line":20,"column":10,"nodeType":"179","messageId":"180","endLine":20,"endColumn":15},{"ruleId":"177","severity":1,"message":"184","line":20,"column":17,"nodeType":"179","messageId":"180","endLine":20,"endColumn":25},{"ruleId":"177","severity":1,"message":"182","line":7,"column":16,"nodeType":"179","messageId":"180","endLine":7,"endColumn":22},{"ruleId":"177","severity":1,"message":"178","line":3,"column":10,"nodeType":"179","messageId":"180","endLine":3,"endColumn":19},{"ruleId":"177","severity":1,"message":"186","line":7,"column":3,"nodeType":"179","messageId":"180","endLine":7,"endColumn":13},{"ruleId":"177","severity":1,"message":"187","line":7,"column":15,"nodeType":"179","messageId":"180","endLine":7,"endColumn":26},{"ruleId":"177","severity":1,"message":"188","line":7,"column":28,"nodeType":"179","messageId":"180","endLine":7,"endColumn":37},{"ruleId":"177","severity":1,"message":"189","line":7,"column":39,"nodeType":"179","messageId":"180","endLine":7,"endColumn":51},{"ruleId":"177","severity":1,"message":"190","line":8,"column":3,"nodeType":"179","messageId":"180","endLine":8,"endColumn":20},{"ruleId":"177","severity":1,"message":"191","line":8,"column":22,"nodeType":"179","messageId":"180","endLine":8,"endColumn":32},{"ruleId":"177","severity":1,"message":"182","line":18,"column":15,"nodeType":"179","messageId":"180","endLine":18,"endColumn":21},{"ruleId":"177","severity":1,"message":"192","line":19,"column":10,"nodeType":"179","messageId":"180","endLine":19,"endColumn":21},{"ruleId":"177","severity":1,"message":"193","line":19,"column":23,"nodeType":"179","messageId":"180","endLine":19,"endColumn":37},{"ruleId":"177","severity":1,"message":"194","line":25,"column":7,"nodeType":"179","messageId":"180","endLine":25,"endColumn":10},{"ruleId":"177","severity":1,"message":"178","line":3,"column":10,"nodeType":"179","messageId":"180","endLine":3,"endColumn":19},{"ruleId":"177","severity":1,"message":"181","line":3,"column":21,"nodeType":"179","messageId":"180","endLine":3,"endColumn":29},{"ruleId":"177","severity":1,"message":"195","line":5,"column":8,"nodeType":"179","messageId":"180","endLine":5,"endColumn":16},{"ruleId":"177","severity":1,"message":"196","line":8,"column":3,"nodeType":"179","messageId":"180","endLine":8,"endColumn":9},{"ruleId":"177","severity":1,"message":"197","line":8,"column":11,"nodeType":"179","messageId":"180","endLine":8,"endColumn":15},{"ruleId":"177","severity":1,"message":"198","line":8,"column":17,"nodeType":"179","messageId":"180","endLine":8,"endColumn":20},{"ruleId":"177","severity":1,"message":"186","line":9,"column":8,"nodeType":"179","messageId":"180","endLine":9,"endColumn":18},{"ruleId":"177","severity":1,"message":"187","line":9,"column":20,"nodeType":"179","messageId":"180","endLine":9,"endColumn":31},{"ruleId":"177","severity":1,"message":"188","line":9,"column":33,"nodeType":"179","messageId":"180","endLine":9,"endColumn":42},{"ruleId":"177","severity":1,"message":"189","line":9,"column":44,"nodeType":"179","messageId":"180","endLine":9,"endColumn":56},{"ruleId":"177","severity":1,"message":"190","line":9,"column":58,"nodeType":"179","messageId":"180","endLine":9,"endColumn":75},{"ruleId":"177","severity":1,"message":"191","line":10,"column":3,"nodeType":"179","messageId":"180","endLine":10,"endColumn":13},{"ruleId":"177","severity":1,"message":"182","line":18,"column":15,"nodeType":"179","messageId":"180","endLine":18,"endColumn":21},{"ruleId":"177","severity":1,"message":"183","line":19,"column":10,"nodeType":"179","messageId":"180","endLine":19,"endColumn":15},{"ruleId":"177","severity":1,"message":"184","line":19,"column":17,"nodeType":"179","messageId":"180","endLine":19,"endColumn":25},{"ruleId":"177","severity":1,"message":"196","line":6,"column":9,"nodeType":"179","messageId":"180","endLine":6,"endColumn":15},{"ruleId":"177","severity":1,"message":"197","line":6,"column":24,"nodeType":"179","messageId":"180","endLine":6,"endColumn":28},{"ruleId":"177","severity":1,"message":"186","line":6,"column":30,"nodeType":"179","messageId":"180","endLine":6,"endColumn":40},{"ruleId":"177","severity":1,"message":"199","line":6,"column":42,"nodeType":"179","messageId":"180","endLine":6,"endColumn":47},{"ruleId":"177","severity":1,"message":"182","line":16,"column":16,"nodeType":"179","messageId":"180","endLine":16,"endColumn":22},{"ruleId":"177","severity":1,"message":"196","line":2,"column":5,"nodeType":"179","messageId":"180","endLine":2,"endColumn":11},{"ruleId":"177","severity":1,"message":"197","line":2,"column":13,"nodeType":"179","messageId":"180","endLine":2,"endColumn":17},{"ruleId":"177","severity":1,"message":"198","line":2,"column":19,"nodeType":"179","messageId":"180","endLine":2,"endColumn":22},{"ruleId":"177","severity":1,"message":"186","line":3,"column":10,"nodeType":"179","messageId":"180","endLine":3,"endColumn":20},{"ruleId":"177","severity":1,"message":"187","line":3,"column":22,"nodeType":"179","messageId":"180","endLine":3,"endColumn":33},{"ruleId":"177","severity":1,"message":"188","line":3,"column":35,"nodeType":"179","messageId":"180","endLine":3,"endColumn":44},{"ruleId":"177","severity":1,"message":"189","line":3,"column":46,"nodeType":"179","messageId":"180","endLine":3,"endColumn":58},{"ruleId":"177","severity":1,"message":"190","line":3,"column":60,"nodeType":"179","messageId":"180","endLine":3,"endColumn":77},{"ruleId":"177","severity":1,"message":"191","line":4,"column":5,"nodeType":"179","messageId":"180","endLine":4,"endColumn":15},{"ruleId":"177","severity":1,"message":"181","line":6,"column":10,"nodeType":"179","messageId":"180","endLine":6,"endColumn":18},{"ruleId":"177","severity":1,"message":"200","line":7,"column":8,"nodeType":"179","messageId":"180","endLine":7,"endColumn":18},{"ruleId":"177","severity":1,"message":"178","line":9,"column":10,"nodeType":"179","messageId":"180","endLine":9,"endColumn":19},{"ruleId":"177","severity":1,"message":"182","line":20,"column":16,"nodeType":"179","messageId":"180","endLine":20,"endColumn":22},{"ruleId":"177","severity":1,"message":"197","line":3,"column":11,"nodeType":"179","messageId":"180","endLine":3,"endColumn":15},{"ruleId":"177","severity":1,"message":"186","line":4,"column":3,"nodeType":"179","messageId":"180","endLine":4,"endColumn":13},{"ruleId":"177","severity":1,"message":"187","line":4,"column":15,"nodeType":"179","messageId":"180","endLine":4,"endColumn":26},{"ruleId":"177","severity":1,"message":"188","line":4,"column":28,"nodeType":"179","messageId":"180","endLine":4,"endColumn":37},{"ruleId":"177","severity":1,"message":"189","line":4,"column":39,"nodeType":"179","messageId":"180","endLine":4,"endColumn":51},{"ruleId":"177","severity":1,"message":"190","line":5,"column":3,"nodeType":"179","messageId":"180","endLine":5,"endColumn":20},{"ruleId":"177","severity":1,"message":"191","line":5,"column":22,"nodeType":"179","messageId":"180","endLine":5,"endColumn":32},{"ruleId":"177","severity":1,"message":"178","line":8,"column":25,"nodeType":"179","messageId":"180","endLine":8,"endColumn":34},{"ruleId":"177","severity":1,"message":"182","line":13,"column":15,"nodeType":"179","messageId":"180","endLine":13,"endColumn":21},{"ruleId":"177","severity":1,"message":"183","line":14,"column":10,"nodeType":"179","messageId":"180","endLine":14,"endColumn":15},{"ruleId":"177","severity":1,"message":"184","line":14,"column":17,"nodeType":"179","messageId":"180","endLine":14,"endColumn":25},{"ruleId":"177","severity":1,"message":"186","line":5,"column":5,"nodeType":"179","messageId":"180","endLine":5,"endColumn":15},{"ruleId":"177","severity":1,"message":"187","line":5,"column":17,"nodeType":"179","messageId":"180","endLine":5,"endColumn":28},{"ruleId":"177","severity":1,"message":"188","line":5,"column":30,"nodeType":"179","messageId":"180","endLine":5,"endColumn":39},{"ruleId":"177","severity":1,"message":"189","line":5,"column":41,"nodeType":"179","messageId":"180","endLine":5,"endColumn":53},{"ruleId":"177","severity":1,"message":"190","line":6,"column":5,"nodeType":"179","messageId":"180","endLine":6,"endColumn":22},{"ruleId":"177","severity":1,"message":"191","line":6,"column":24,"nodeType":"179","messageId":"180","endLine":6,"endColumn":34},{"ruleId":"177","severity":1,"message":"182","line":15,"column":16,"nodeType":"179","messageId":"180","endLine":15,"endColumn":22},{"ruleId":"177","severity":1,"message":"201","line":49,"column":16,"nodeType":"179","messageId":"180","endLine":49,"endColumn":33},{"ruleId":"177","severity":1,"message":"202","line":1,"column":8,"nodeType":"179","messageId":"180","endLine":1,"endColumn":13},"dot-location",[],"new-parens",[],"no-mixed-operators",[],"no-new-object",["203"],"no-whitespace-before-property",[],"rest-spread-spacing",[],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'setJwt' is assigned a value but never used.","'roles' is assigned a value but never used.","'setRoles' is assigned a value but never used.","'LogOut' is defined but never used.","'InputGroup' is defined but never used.","'ButtonGroup' is defined but never used.","'FormLabel' is defined but never used.","'ToggleButton' is defined but never used.","'ToggleButtonGroup' is defined but never used.","'NavbarText' is defined but never used.","'loginSource' is assigned a value but never used.","'setLoginSource' is assigned a value but never used.","'pom' is assigned a value but never used.","'Settings' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'Row' is defined but never used.","'Alert' is defined but never used.","'DatePicker' is defined but never used.","'UseGetRoleFromJWT' is defined but never used.","'React' is defined but never used.","no-object-constructor"]