{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\benja\\\\OneDrive\\\\Desktop\\\\progi\\\\web\\\\src\\\\User\\\\index.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useLocalState } from '../util/useLocalStorage';\nimport { useEffect, useState } from 'react';\nimport ValidateToken from '../services/validatetoken';\nimport { LogOut } from '../services/LogOut';\nimport Settings from '../Settings';\nimport { jwtDecode } from \"jwt-decode\";\nimport TimerComponent from '../services/CheckJwt';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst User = () => {\n  _s();\n  const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\n  const [roles, setRoles] = useLocalState(UseGetRoleFromJWT);\n  if (jwt) {\n    try {\n      const decoded = jwtDecode(jwt);\n      console.log(decoded.authorities);\n      console.log(\"Ovo vracas:\" + decoded.roles[0].authority);\n      if (decoded.roles[0].authority === \"ADMIN\") {\n        window.location.href = \"/admin\";\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading....\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 20\n        }, this);\n      } else if (decoded.roles[0].authority !== \"USER\") {\n        window.location.href = \"/welcome\";\n      }\n    } catch (error) {\n      window.location.href = \"/welcome\";\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 16\n      }, this);\n    }\n  }\n  function UseGetRoleFromJWT() {\n    if (jwt) {\n      const decoded = jwtDecode(jwt);\n      console.log(decoded.authorities);\n      return decoded.roles[0].authority;\n    } else {\n      return \"\";\n    }\n  }\n  console.log(\"idem dalje\");\n\n  /*function isTokenJwt(token, publicKey) {\r\n      try {\r\n        // Verify the signature using the public key\r\n        const decoded = jwt.verify(token, publicKey, { algorithms: ['RS256'] });\r\n    \r\n        // Check token expiration\r\n        const currentTimestamp = Math.floor(Date.now() / 1000);\r\n        if (decoded.exp && decoded.exp < currentTimestamp) {\r\n          LogOut();\r\n          // Token has expired\r\n           \r\n        }\r\n    \r\n        // Additional checks on other claims if needed\r\n    \r\n        // If all checks pass, the token is valid\r\n        return true;\r\n      } catch (error) {\r\n        // An error occurred during verification, token is invalid\r\n        LogOut();\r\n      }\r\n    \r\n    }\r\n  \r\n    \r\n  isTokenJwt(jwt,Settings.publicKey);\r\n  */\n\n  // Example usage:\n\n  /*const TimerComponent = () => {\r\n      const [countdown, setCountdown] = useState(60); // Initial countdown in seconds\r\n      const [isTokenValid, setIsTokenValid] = useState(true); // Initial state for token validity\r\n    \r\n      // Function to decrement the countdown\r\n      const decrementCountdown = () => {\r\n        setCountdown((prevCountdown) => prevCountdown - 1);\r\n      };\r\n    \r\n      // Function to check JWT validity\r\n      const CheckJwt = () => {\r\n        // Perform your JWT validity check logic here\r\n        // For demonstration purposes, assume a function isTokenValid(token) is used\r\n        // Replace it with your actual logic to check the JWT validity\r\n        const token = localStorage.getItem('jwtToken');\r\n        setIsTokenValid(isTokenValid(token));\r\n      };\r\n    \r\n      useEffect(() => {\r\n        // Check JWT validity initially\r\n        CheckJwt();\r\n    \r\n        // Schedule the decrementCountdown function to run every second\r\n        const timerId = setInterval(() => {\r\n          decrementCountdown();\r\n    \r\n          // Check JWT validity every 60 seconds\r\n          if (countdown % 60 === 0) {\r\n            CheckJwt();\r\n          }\r\n        }, 1000);\r\n    \r\n        // Cleanup function to clear the interval when the component is unmounted\r\n        return () => clearInterval(timerId);\r\n      }, [countdown]);\r\n    \r\n      return (\r\n        <div>\r\n          <p>Countdown: {countdown} seconds</p>\r\n        </div>\r\n      );\r\n    };\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n        TimerComponent();*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Usao si\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"jtw is \", jwt]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"logout\",\n        type: \"button\",\n        onClick: () => LogOut(),\n        children: \"LogOut\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"settings\",\n        type: \"button\",\n        onClick: () => window.location.href = \"/settings\",\n        children: \"Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 9\n  }, this);\n};\n_s(User, \"PYrBa9pqcKfbDGKGnYY14AClEcg=\", false, function () {\n  return [useLocalState, useLocalState];\n});\n_c = User;\nexport default User;\nvar _c;\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["React","useLocalState","useEffect","useState","ValidateToken","LogOut","Settings","jwtDecode","TimerComponent","jsxDEV","_jsxDEV","User","_s","jwt","setJwt","roles","setRoles","UseGetRoleFromJWT","decoded","console","log","authorities","authority","window","location","href","children","fileName","_jsxFileName","lineNumber","columnNumber","error","id","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/benja/OneDrive/Desktop/progi/web/src/User/index.js"],"sourcesContent":["import React from 'react';\r\nimport { useLocalState } from '../util/useLocalStorage';\r\nimport { useEffect,useState } from 'react';\r\nimport ValidateToken from '../services/validatetoken';\r\nimport { LogOut } from '../services/LogOut';\r\nimport Settings from '../Settings';\r\nimport {jwtDecode} from \"jwt-decode\";\r\nimport TimerComponent from '../services/CheckJwt';\r\n\r\n\r\n\r\n\r\n\r\nconst User = () => {\r\n    const [jwt,setJwt] = useLocalState(\"\", \"jwt\");\r\n      const [roles,setRoles] = useLocalState(UseGetRoleFromJWT);\r\n      if(jwt){\r\n        try{\r\n        const decoded = jwtDecode(jwt);\r\n        \r\n        console.log(decoded.authorities);\r\n        console.log(\"Ovo vracas:\"+decoded.roles[0].authority );\r\n        if(decoded.roles[0].authority === \"ADMIN\"){\r\n            window.location.href = \"/admin\";\r\n            return <div>Loading....</div>\r\n         \r\n        }else if(decoded.roles[0].authority !== \"USER\"){\r\n            window.location.href = \"/welcome\";\r\n            \r\n        }\r\n      }\r\n    catch(error){\r\n        window.location.href = \"/welcome\";\r\n        return <div>Loading....</div>\r\n       }}\r\n\r\n      function UseGetRoleFromJWT(){    \r\n        if(jwt){\r\n          const decoded = jwtDecode(jwt);\r\n          console.log(decoded.authorities);\r\n          \r\n          return decoded.roles[0].authority;\r\n        }\r\n        else{\r\n          return \"\";\r\n        }\r\n    }\r\n    \r\n    console.log(\"idem dalje\");\r\n\r\n    /*function isTokenJwt(token, publicKey) {\r\n        try {\r\n          // Verify the signature using the public key\r\n          const decoded = jwt.verify(token, publicKey, { algorithms: ['RS256'] });\r\n      \r\n          // Check token expiration\r\n          const currentTimestamp = Math.floor(Date.now() / 1000);\r\n          if (decoded.exp && decoded.exp < currentTimestamp) {\r\n            LogOut();\r\n            // Token has expired\r\n             \r\n          }\r\n      \r\n          // Additional checks on other claims if needed\r\n      \r\n          // If all checks pass, the token is valid\r\n          return true;\r\n        } catch (error) {\r\n          // An error occurred during verification, token is invalid\r\n          LogOut();\r\n        }\r\n      \r\n      }\r\n\r\n  \r\n\r\n    \r\n    isTokenJwt(jwt,Settings.publicKey);\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n  \r\n  // Example usage:\r\n  \r\n\r\n\r\n\r\n\r\n\r\n/*const TimerComponent = () => {\r\n    const [countdown, setCountdown] = useState(60); // Initial countdown in seconds\r\n    const [isTokenValid, setIsTokenValid] = useState(true); // Initial state for token validity\r\n  \r\n    // Function to decrement the countdown\r\n    const decrementCountdown = () => {\r\n      setCountdown((prevCountdown) => prevCountdown - 1);\r\n    };\r\n  \r\n    // Function to check JWT validity\r\n    const CheckJwt = () => {\r\n      // Perform your JWT validity check logic here\r\n      // For demonstration purposes, assume a function isTokenValid(token) is used\r\n      // Replace it with your actual logic to check the JWT validity\r\n      const token = localStorage.getItem('jwtToken');\r\n      setIsTokenValid(isTokenValid(token));\r\n    };\r\n  \r\n    useEffect(() => {\r\n      // Check JWT validity initially\r\n      CheckJwt();\r\n  \r\n      // Schedule the decrementCountdown function to run every second\r\n      const timerId = setInterval(() => {\r\n        decrementCountdown();\r\n  \r\n        // Check JWT validity every 60 seconds\r\n        if (countdown % 60 === 0) {\r\n          CheckJwt();\r\n        }\r\n      }, 1000);\r\n  \r\n      // Cleanup function to clear the interval when the component is unmounted\r\n      return () => clearInterval(timerId);\r\n    }, [countdown]);\r\n  \r\n    return (\r\n      <div>\r\n        <p>Countdown: {countdown} seconds</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n      TimerComponent();*/\r\n    \r\n\r\n    return (\r\n        <div>\r\n\r\n            <h1>Usao si</h1>\r\n            <div>jtw is {jwt}</div>\r\n            <div>\r\n            <button id=\"logout\" type=\"button\" onClick={() => LogOut()}>LogOut</button>\r\n            </div>\r\n\r\n            <div>\r\n            <button id=\"settings\" type=\"button\" onClick={() => window.location.href = \"/settings\"}>Settings</button>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}