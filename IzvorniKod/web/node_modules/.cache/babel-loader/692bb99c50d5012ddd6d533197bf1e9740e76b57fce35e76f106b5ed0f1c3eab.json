{"ast":null,"code":"import React from 'react';\nimport { Button, Form, Row, Col, Container, Navbar, Nav, InputGroup, ButtonGroup, FormLabel, ToggleButton, ToggleButtonGroup, NavbarText } from 'react-bootstrap';\nimport DatePicker from 'react-datepicker';\nimport { jwtDecode } from 'jwt-decode';\nimport { useLocalState } from '../util/useLocalStorage';\nimport { useState } from 'react';\nconst index = () => {\n  /*const [jwt,setJwt] = useLocalState(\"\", \"jwt\");\r\n  const [validated, setValidated] = useState(false);\r\n  const [ime, setIme] = useState('');\r\n  const [prezime, setPrezime] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [lozinka, setLozinka] = useState('');\r\n  const [kime, setKime] = useState('');\r\n  const [dob, setDob] = useState(null);\r\n  const [oib, setOib] = useState('');\r\n  const [spol, setSpol] = useState('');\r\n    if(jwt){\r\n      const decoded = jwtDecode(jwt);\r\n      console.log(decoded.authorities);\r\n      console.log(\"Ovo vracas:\"+decoded.roles[0].authority );\r\n      if(decoded.roles[0].authority === \"ADMIN\"){\r\n        window.location.href = \"/admin\";\r\n        return <div>Loading....</div>\r\n      }\r\n      if(decoded.roles[0].authority === \"USER\"){\r\n        window.location.href = \"/user\";\r\n        return <div>Loading....</div>\r\n      }\r\n        if(decoded.roles[0].authority === \"EMPLOYEE\"){\r\n          window.location.href = \"/employee\";\r\n          return <div>Loading....</div>\r\n        }\r\n      \r\n      }\r\n    \r\n      function UseGetRoleFromJWT(){    \r\n      if(jwt){\r\n        const decoded = jwtDecode(jwt);\r\n        console.log(decoded.authorities);\r\n        \r\n        return decoded.roles[0].authority;\r\n      }\r\n      else{\r\n        return \"\";\r\n      }\r\n  }\r\n  \r\n  \r\n   \r\n  \r\n  \r\n      const handleName = (event) => {\r\n      const Newname = event.target.value;\r\n      const isValidName = Newname.length >= 0 && Newname.trim() !== '';\r\n      setIme(Newname);\r\n      setValidated(isValidName);\r\n  };\r\n    const handlesurName = (event) => {\r\n      const Newsurname = event.target.value;\r\n      const isValidsurName = Newsurname.length >= 0 && Newsurname.trim() !== '';\r\n      setPrezime(Newsurname);\r\n      setValidated(isValidsurName);\r\n  };\r\n    const handlePasswordChange = (event) => {\r\n      const novaLozinka = event.target.value;\r\n      const isValidPassword = novaLozinka.length >= 8 && novaLozinka.length <= 20 &&\r\n          novaLozinka.trim() !== '';\r\n      setLozinka(novaLozinka);\r\n      setValidated(isValidPassword);\r\n  };\r\n    const handleKName = (event) => {\r\n      const NewKname = event.target.value;\r\n      const isValidKName = NewKname.length >= 0 && NewKname.trim() !== '';\r\n      setKime(NewKname);\r\n      setValidated(isValidKName);\r\n  };\r\n    const handleDateChange = (date) => {\r\n      setDob(date);\r\n      setValidated(false);\r\n  };\r\n    const handleOibChange = (e) => {\r\n      setOib(e.target.value);\r\n      setValidated(false);\r\n  };\r\n    const isValidOIB = (oib) => {\r\n      const oibRegex = /^\\d{11}$/;\r\n      return oibRegex.test(oib);\r\n  };\r\n    const handleGenderChange = (e) => {\r\n      setSpol(e.target.value);\r\n      setValidated(false);\r\n  };\r\n  \r\n  const handleSubmit = (event) => {\r\n      event.preventDefault();\r\n      const form = event.currentTarget;\r\n        if (ime.trim() === '' || prezime.trim() === '' || email.trim() === '' || lozinka.trim() === '' ||\r\n          kime.trim() === '' || dob === null || spol === '' || !isValidOIB(oib) || lozinka.length <= 7 || lozinka.length >= 21) {\r\n          setValidated(true);\r\n          return;\r\n      }\r\n        if (form.checkValidity() === false) {\r\n          event.stopPropagation();\r\n      } else {\r\n          function sendRegisterRequest() {\r\n          const formData = {\r\n              name: ime,\r\n              lastName: prezime,\r\n              email: email,\r\n              password: lozinka,\r\n              username: kime,\r\n              gender: spol,\r\n              dob: dob,\r\n              oib: oib,\r\n          };\r\n          const jsonData = JSON.stringify(formData);\r\n     \r\n            fetch(\"http://localhost:8080/api/v1/auth/register\" ,{\r\n              headers: {\r\n                  \"Content-Type\": \"application/json\",\r\n              },\r\n              method: \"POST\",\r\n              body: jsonData,\r\n          })\r\n          .then(data => {\r\n              if(data.token !== null)\r\n              setJwt(data.token);\r\n          }).then(response => {\r\n              if(response.status === 200){\r\n                  window.location.href = \"/user\";\r\n              }\r\n          console.log('JSON data:', jsonData);\r\n           });\r\n        setValidated(true);\r\n          \r\n  };\r\n  \n  };\r\n      };\r\n  \r\n  return ( \r\n  <Container className=\"justify-content-md-center\">\r\n  <Navbar bg=\"dark\" data-bs-theme=\"dark\" fixed=\"top\">\r\n      <Container className=\"justify-content-space-between\">\r\n          <Col xs={1}>\r\n              <Navbar.Brand href=\"#\">\r\n                  <img\r\n                      src=\"/logofr.jpeg\"\r\n                      width=\"150\"\r\n                      height=\"75\"\r\n                        className=\"d-inline-block align-items-start rounded\"\r\n                      alt=\"logo\"\r\n                  />\r\n                </Navbar.Brand>\r\n          </Col>\r\n          <Col xs={8}>\r\n              <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n              <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-center\">\r\n                  <Navbar.Brand>Registracija</Navbar.Brand>\r\n              </Navbar.Collapse>\r\n          </Col>\r\n            <Col xs={1}>\r\n              <Navbar.Collapse className=\"justify-content-end\">\r\n                  <Nav>\r\n                      <Button variant=\"outline-primary\">Povratak</Button>\r\n                  </Nav>\r\n              </Navbar.Collapse>\r\n          </Col>\r\n        </Container>\r\n  </Navbar>\r\n  <br /><br /><br /><br /><br /><br /><br />\r\n      <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n      <Row className=\"justify-content-md-center\">\r\n          <Col xs={3}>\r\n              <Form.Group md=\"4\" controlId=\"validationCustom01\">\r\n                  <Form.Label>Ime</Form.Label>\r\n                  <Form.Control\r\n                      required\r\n                      type=\"text\"\r\n                      placeholder=\"Ime\"\r\n                      onChange={handleName}\r\n                      isValid={false}\r\n                  />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      Molimo unesite ime.\r\n                  </Form.Control.Feedback>\r\n              </Form.Group>\r\n          </Col>\r\n          <Col xs={3}>\r\n              <Form.Group md=\"4\" controlId=\"validationCustom02\">\r\n                  <Form.Label>Prezime</Form.Label>\r\n                  <Form.Control\r\n                      required\r\n                      type=\"text\"\r\n                      placeholder=\"Prezime\"\r\n                      onChange={handlesurName}\r\n                      isValid={false}\r\n                  />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      Molimo unesite prezime.\r\n                  </Form.Control.Feedback>\r\n              </Form.Group>\r\n          </Col>\r\n          </Row>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col xs={3}>\r\n              <Form.Group md=\"6\" controlId=\"validationCustom03\">\r\n                  <Form.Label>OIB</Form.Label>\r\n                  <Form.Control type=\"text\"\r\n                      placeholder=\"OIB\"\r\n                      required\r\n                      value={oib}\r\n                      onChange={handleOibChange}\r\n                      isInvalid={validated && !isValidOIB(oib)}\r\n                      isValid={validated && isValidOIB(oib)}\r\n                      aria-describedby=\"uputeOib\"\r\n                  />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      Molimo unesite ispravan OIB.\r\n                  </Form.Control.Feedback>\r\n                  <Form.Text id=\"uputeOib\" muted>\r\n                      OIB mora sadžavati točno 11 znamenaka.\r\n                  </Form.Text>\r\n              </Form.Group>\r\n          </Col>\r\n          <Col xs={3}>\r\n              <Form.Group md=\"3\" controlId=\"validationCustom06\">\r\n                  <Form.Label>Korisničko ime</Form.Label>\r\n                  <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Korisničko ime\"\r\n                      onChange={handleKName}\r\n                      isValid={false}\r\n                      required />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      Molimo unesite korisničko ime.\r\n                  </Form.Control.Feedback>\r\n              </Form.Group>\r\n          </Col>\r\n        </Row>\r\n  \r\n      <Row className=\"justify-content-md-center\">\r\n          <Col xs={6}>\r\n              <Form.Group md=\"3\" controlId=\"validationCustom04\">\r\n                  <Form.Label>Email</Form.Label>\r\n                  <Form.Control\r\n                      type=\"email\"\r\n                      placeholder=\"Email\"\r\n                      required\r\n                      value={email}\r\n                      onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      Molimo unesite ispravan email.\r\n                  </Form.Control.Feedback>\r\n              </Form.Group>\r\n          </Col>\r\n      </Row>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col xs={6}>\r\n              <Form.Group md=\"3\" controlId=\"validationCustom05\">\r\n                  <Form.Label>Lozinka</Form.Label>\r\n                  <Form.Control\r\n                      type=\"password\"\r\n                      placeholder=\"Lozinka\"\r\n                      required\r\n                      value={lozinka}\r\n                      onChange={handlePasswordChange}\r\n                      aria-describedby=\"upute\"\r\n                      isValid={false}\r\n                  />\r\n                  <Form.Text id=\"upute\" muted>\r\n                      Vaša lozinka mora biti duga 8-20 znakova i ne smije sadžavati razmake.\r\n                  </Form.Text>\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                      Molimo unesite ispravnu lozinku.\r\n                  </Form.Control.Feedback>\r\n              </Form.Group>\r\n          </Col>\r\n      </Row>\r\n      <Row className=\"justify-content-md-center\">\r\n          <Col xs={3}>\r\n              <br />\r\n              <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Spol</Form.Label>\r\n                  <div>\r\n                      <Form.Check\r\n                          inline\r\n                          required\r\n                          label=\"Muško\"\r\n                          name=\"gender\"\r\n                          type=\"radio\"\r\n                          id=\"gender-male\"\r\n                          value=\"muško\"\r\n                          checked={spol === 'muško'}\r\n                          onChange={handleGenderChange}\r\n                          isInvalid={validated && spol === ''}\r\n                      />\r\n                      <Form.Check\r\n                          inline\r\n                          required\r\n                          label=\"Žensko\"\r\n                          name=\"gender\"\r\n                          type=\"radio\"\r\n                          id=\"gender-female\"\r\n                          value=\"žensko\"\r\n                          checked={spol === 'žensko'}\r\n                          onChange={handleGenderChange}\r\n                          isInvalid={validated && spol === ''}\r\n                      />\r\n                  </div>\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                      Molimo odaberite spol.\r\n                  </Form.Control.Feedback>\r\n              </Form.Group>\r\n          </Col>\r\n            <Col xs={3}>\r\n              <br />\r\n              <Form.Group className=\"mb-3\" controlId=\"dob\">\r\n                  <Form.Label>Datum rođenja</Form.Label>\r\n                  <br />\r\n                  <DatePicker\r\n                      required\r\n                      selected={dob}\r\n                      onChange={handleDateChange}\r\n                      dateFormat=\"dd/MM/yyyy\"\r\n                      isClearable\r\n                      placeholderText=\"Odaberite datum rođenja\"\r\n                  />\r\n              </Form.Group>\r\n          </Col>\r\n      </Row>\r\n         \r\n        <br /><br /><br />\r\n      <Row className=\"justify-content-md-center\">\r\n          <Col xs={2}>\r\n              <Button className=\"mb-3\" type=\"submit\"onClick={() => sendRegisterRequest() }>Registriraj se</Button>\r\n          </Col>\r\n        </Row>\r\n  </Form>\r\n  <br /><br /><br />\r\n  <Row className=\"text-end\">\r\n      <p>\r\n          Već ste registrirani? Kliknite{' '}\r\n          <a href=\"#\">\r\n              ovdje.\r\n          </a>\r\n      </p>\r\n  </Row>\r\n  </Container >\r\n  )\r\n  */\n};\nexport default index;","map":{"version":3,"names":["React","Button","Form","Row","Col","Container","Navbar","Nav","InputGroup","ButtonGroup","FormLabel","ToggleButton","ToggleButtonGroup","NavbarText","DatePicker","jwtDecode","useLocalState","useState","index"],"sources":["C:/Users/benja/OneDrive/Desktop/progi/web/src/Register/index.js"],"sourcesContent":["\r\nimport React from 'react';\r\nimport {\r\n    Button, Form, Row, Col, Container, Navbar, Nav,\r\n    InputGroup, ButtonGroup, FormLabel, ToggleButton,\r\n    ToggleButtonGroup, NavbarText\r\n} from 'react-bootstrap';\r\nimport DatePicker from 'react-datepicker';\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport { useLocalState } from '../util/useLocalStorage';\r\nimport { useState } from 'react';\r\n\r\n\r\nconst index = () => {\r\n    /*const [jwt,setJwt] = useLocalState(\"\", \"jwt\");\r\n    const [validated, setValidated] = useState(false);\r\n    const [ime, setIme] = useState('');\r\n    const [prezime, setPrezime] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [lozinka, setLozinka] = useState('');\r\n    const [kime, setKime] = useState('');\r\n    const [dob, setDob] = useState(null);\r\n    const [oib, setOib] = useState('');\r\n    const [spol, setSpol] = useState('');\r\n\r\n    if(jwt){\r\n        const decoded = jwtDecode(jwt);\r\n        console.log(decoded.authorities);\r\n        console.log(\"Ovo vracas:\"+decoded.roles[0].authority );\r\n        if(decoded.roles[0].authority === \"ADMIN\"){\r\n          window.location.href = \"/admin\";\r\n          return <div>Loading....</div>\r\n        }\r\n        if(decoded.roles[0].authority === \"USER\"){\r\n          window.location.href = \"/user\";\r\n          return <div>Loading....</div>\r\n        }\r\n\r\n        if(decoded.roles[0].authority === \"EMPLOYEE\"){\r\n            window.location.href = \"/employee\";\r\n            return <div>Loading....</div>\r\n          }\r\n        \r\n        }\r\n      \r\n\r\n      function UseGetRoleFromJWT(){    \r\n        if(jwt){\r\n          const decoded = jwtDecode(jwt);\r\n          console.log(decoded.authorities);\r\n          \r\n          return decoded.roles[0].authority;\r\n        }\r\n        else{\r\n          return \"\";\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleName = (event) => {\r\n        const Newname = event.target.value;\r\n        const isValidName = Newname.length >= 0 && Newname.trim() !== '';\r\n        setIme(Newname);\r\n        setValidated(isValidName);\r\n    };\r\n\r\n    const handlesurName = (event) => {\r\n        const Newsurname = event.target.value;\r\n        const isValidsurName = Newsurname.length >= 0 && Newsurname.trim() !== '';\r\n        setPrezime(Newsurname);\r\n        setValidated(isValidsurName);\r\n    };\r\n\r\n    const handlePasswordChange = (event) => {\r\n        const novaLozinka = event.target.value;\r\n        const isValidPassword = novaLozinka.length >= 8 && novaLozinka.length <= 20 &&\r\n            novaLozinka.trim() !== '';\r\n        setLozinka(novaLozinka);\r\n        setValidated(isValidPassword);\r\n    };\r\n\r\n    const handleKName = (event) => {\r\n        const NewKname = event.target.value;\r\n        const isValidKName = NewKname.length >= 0 && NewKname.trim() !== '';\r\n        setKime(NewKname);\r\n        setValidated(isValidKName);\r\n    };\r\n\r\n    const handleDateChange = (date) => {\r\n        setDob(date);\r\n        setValidated(false);\r\n    };\r\n\r\n    const handleOibChange = (e) => {\r\n        setOib(e.target.value);\r\n        setValidated(false);\r\n    };\r\n\r\n    const isValidOIB = (oib) => {\r\n        const oibRegex = /^\\d{11}$/;\r\n        return oibRegex.test(oib);\r\n    };\r\n\r\n    const handleGenderChange = (e) => {\r\n        setSpol(e.target.value);\r\n        setValidated(false);\r\n    };\r\n\r\n\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const form = event.currentTarget;\r\n\r\n        if (ime.trim() === '' || prezime.trim() === '' || email.trim() === '' || lozinka.trim() === '' ||\r\n            kime.trim() === '' || dob === null || spol === '' || !isValidOIB(oib) || lozinka.length <= 7 || lozinka.length >= 21) {\r\n            setValidated(true);\r\n            return;\r\n        }\r\n\r\n        if (form.checkValidity() === false) {\r\n            event.stopPropagation();\r\n        } else {\r\n            function sendRegisterRequest() {\r\n            const formData = {\r\n                name: ime,\r\n                lastName: prezime,\r\n                email: email,\r\n                password: lozinka,\r\n                username: kime,\r\n                gender: spol,\r\n                dob: dob,\r\n                oib: oib,\r\n            };\r\n            const jsonData = JSON.stringify(formData);\r\n       \r\n\r\n            fetch(\"http://localhost:8080/api/v1/auth/register\" ,{\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                method: \"POST\",\r\n                body: jsonData,\r\n            })\r\n            .then(data => {\r\n                if(data.token !== null)\r\n                setJwt(data.token);\r\n            }).then(response => {\r\n                if(response.status === 200){\r\n                    window.location.href = \"/user\";\r\n                }\r\n            console.log('JSON data:', jsonData);\r\n             });\r\n\r\n        setValidated(true);\r\n            \r\n    };\r\n   \r\n    };\r\n        };\r\n\r\n\r\n\r\n    return ( \r\n    <Container className=\"justify-content-md-center\">\r\n    <Navbar bg=\"dark\" data-bs-theme=\"dark\" fixed=\"top\">\r\n        <Container className=\"justify-content-space-between\">\r\n            <Col xs={1}>\r\n                <Navbar.Brand href=\"#\">\r\n                    <img\r\n                        src=\"/logofr.jpeg\"\r\n                        width=\"150\"\r\n                        height=\"75\"\r\n\r\n                        className=\"d-inline-block align-items-start rounded\"\r\n                        alt=\"logo\"\r\n                    />\r\n\r\n                </Navbar.Brand>\r\n            </Col>\r\n            <Col xs={8}>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-center\">\r\n                    <Navbar.Brand>Registracija</Navbar.Brand>\r\n                </Navbar.Collapse>\r\n            </Col>\r\n\r\n            <Col xs={1}>\r\n                <Navbar.Collapse className=\"justify-content-end\">\r\n                    <Nav>\r\n                        <Button variant=\"outline-primary\">Povratak</Button>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Col>\r\n\r\n        </Container>\r\n    </Navbar>\r\n    <br /><br /><br /><br /><br /><br /><br />\r\n\r\n\r\n    <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n        <Row className=\"justify-content-md-center\">\r\n            <Col xs={3}>\r\n                <Form.Group md=\"4\" controlId=\"validationCustom01\">\r\n                    <Form.Label>Ime</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"Ime\"\r\n                        onChange={handleName}\r\n                        isValid={false}\r\n                    />\r\n\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Molimo unesite ime.\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n            </Col>\r\n            <Col xs={3}>\r\n                <Form.Group md=\"4\" controlId=\"validationCustom02\">\r\n                    <Form.Label>Prezime</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type=\"text\"\r\n                        placeholder=\"Prezime\"\r\n                        onChange={handlesurName}\r\n                        isValid={false}\r\n                    />\r\n\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Molimo unesite prezime.\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n            </Col>\r\n\r\n\r\n        </Row>\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n            <Col xs={3}>\r\n                <Form.Group md=\"6\" controlId=\"validationCustom03\">\r\n                    <Form.Label>OIB</Form.Label>\r\n                    <Form.Control type=\"text\"\r\n                        placeholder=\"OIB\"\r\n                        required\r\n                        value={oib}\r\n                        onChange={handleOibChange}\r\n                        isInvalid={validated && !isValidOIB(oib)}\r\n                        isValid={validated && isValidOIB(oib)}\r\n                        aria-describedby=\"uputeOib\"\r\n                    />\r\n\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Molimo unesite ispravan OIB.\r\n                    </Form.Control.Feedback>\r\n                    <Form.Text id=\"uputeOib\" muted>\r\n                        OIB mora sadžavati točno 11 znamenaka.\r\n                    </Form.Text>\r\n                </Form.Group>\r\n            </Col>\r\n            <Col xs={3}>\r\n                <Form.Group md=\"3\" controlId=\"validationCustom06\">\r\n                    <Form.Label>Korisničko ime</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Korisničko ime\"\r\n                        onChange={handleKName}\r\n                        isValid={false}\r\n                        required />\r\n\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Molimo unesite korisničko ime.\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n            </Col>\r\n\r\n        </Row>\r\n\r\n\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n            <Col xs={6}>\r\n                <Form.Group md=\"3\" controlId=\"validationCustom04\">\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control\r\n                        type=\"email\"\r\n                        placeholder=\"Email\"\r\n                        required\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Molimo unesite ispravan email.\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n            </Col>\r\n        </Row>\r\n\r\n        <Row className=\"justify-content-md-center\">\r\n            <Col xs={6}>\r\n                <Form.Group md=\"3\" controlId=\"validationCustom05\">\r\n                    <Form.Label>Lozinka</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        placeholder=\"Lozinka\"\r\n                        required\r\n                        value={lozinka}\r\n                        onChange={handlePasswordChange}\r\n                        aria-describedby=\"upute\"\r\n                        isValid={false}\r\n                    />\r\n                    <Form.Text id=\"upute\" muted>\r\n                        Vaša lozinka mora biti duga 8-20 znakova i ne smije sadžavati razmake.\r\n                    </Form.Text>\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Molimo unesite ispravnu lozinku.\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n            </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-md-center\">\r\n            <Col xs={3}>\r\n                <br />\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Spol</Form.Label>\r\n                    <div>\r\n                        <Form.Check\r\n                            inline\r\n                            required\r\n                            label=\"Muško\"\r\n                            name=\"gender\"\r\n                            type=\"radio\"\r\n                            id=\"gender-male\"\r\n                            value=\"muško\"\r\n                            checked={spol === 'muško'}\r\n                            onChange={handleGenderChange}\r\n                            isInvalid={validated && spol === ''}\r\n                        />\r\n                        <Form.Check\r\n                            inline\r\n                            required\r\n                            label=\"Žensko\"\r\n                            name=\"gender\"\r\n                            type=\"radio\"\r\n                            id=\"gender-female\"\r\n                            value=\"žensko\"\r\n                            checked={spol === 'žensko'}\r\n                            onChange={handleGenderChange}\r\n                            isInvalid={validated && spol === ''}\r\n                        />\r\n                    </div>\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Molimo odaberite spol.\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n            </Col>\r\n\r\n            <Col xs={3}>\r\n                <br />\r\n                <Form.Group className=\"mb-3\" controlId=\"dob\">\r\n                    <Form.Label>Datum rođenja</Form.Label>\r\n                    <br />\r\n                    <DatePicker\r\n                        required\r\n                        selected={dob}\r\n                        onChange={handleDateChange}\r\n                        dateFormat=\"dd/MM/yyyy\"\r\n                        isClearable\r\n                        placeholderText=\"Odaberite datum rođenja\"\r\n                    />\r\n                </Form.Group>\r\n            </Col>\r\n        </Row>\r\n\r\n\r\n       \r\n\r\n        <br /><br /><br />\r\n        <Row className=\"justify-content-md-center\">\r\n            <Col xs={2}>\r\n                <Button className=\"mb-3\" type=\"submit\"onClick={() => sendRegisterRequest() }>Registriraj se</Button>\r\n            </Col>\r\n\r\n        </Row>\r\n    </Form>\r\n    <br /><br /><br />\r\n    <Row className=\"text-end\">\r\n        <p>\r\n            Već ste registrirani? Kliknite{' '}\r\n            <a href=\"#\">\r\n                ovdje.\r\n            </a>\r\n        </p>\r\n    </Row>\r\n</Container >\r\n    )\r\n*/\r\n\r\n};\r\n\r\nexport default index;"],"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACIC,MAAM,EAAEC,IAAI,EAAEC,GAAG,EAAEC,GAAG,EAAEC,SAAS,EAAEC,MAAM,EAAEC,GAAG,EAC9CC,UAAU,EAAEC,WAAW,EAAEC,SAAS,EAAEC,YAAY,EAChDC,iBAAiB,EAAEC,UAAU,QAC1B,iBAAiB;AACxB,OAAOC,UAAU,MAAM,kBAAkB;AACzC,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,aAAa,QAAQ,yBAAyB;AACvD,SAASC,QAAQ,QAAQ,OAAO;AAGhC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAChzVI,CAgZH;AAED,eAAeA,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}