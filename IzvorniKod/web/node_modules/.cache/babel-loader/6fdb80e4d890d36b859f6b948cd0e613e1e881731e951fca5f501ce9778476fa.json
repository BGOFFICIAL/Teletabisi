{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\benja\\\\OneDrive\\\\Desktop\\\\progi\\\\web\\\\src\\\\User\\\\index.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useLocalState } from '../util/useLocalStorage';\nimport ValidateToken from '../services/validatetoken';\nimport { LogOut } from '../services/LogOut';\nimport Settings from '../Settings';\nimport { jwtDecode } from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst User = () => {\n  _s();\n  const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\n  const [roles, setRoles] = useLocalState(UseGetRoleFromJWT);\n  if (jwt) {\n    const decoded = jwtDecode(jwt);\n    console.log(decoded.authorities);\n    console.log(\"Ovo vracas:\" + decoded.roles[0].authority);\n    if (decoded.roles[0].authority === \"ADMIN\") {\n      window.location.href = \"/admin\";\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 20\n      }, this);\n    } else if (decoded.roles[0].authority !== \"USER\") {\n      window.location.href = \"/welcome\";\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 20\n      }, this);\n    }\n  }\n  function UseGetRoleFromJWT() {\n    if (jwt) {\n      const decoded = jwtDecode(jwt);\n      console.log(decoded.authorities);\n      return decoded.roles[0].authority;\n    } else {\n      return \"\";\n    }\n  }\n  console.log(\"idem dalje\");\n  function isTokenJwt(token, publicKey) {\n    try {\n      // Verify the signature using the public key\n      const decoded = jwt.verify(token, publicKey, {\n        algorithms: ['RS256']\n      });\n\n      // Check token expiration\n      const currentTimestamp = Math.floor(Date.now() / 1000);\n      if (decoded.exp && decoded.exp < currentTimestamp) {\n        // Token has expired\n        return LogOut();\n      }\n\n      // Additional checks on other claims if needed\n\n      // If all checks pass, the token is valid\n      return true;\n    } catch (error) {\n      // An error occurred during verification, token is invalid\n      return LogOut();\n    }\n  }\n  function isTokenJwt(token, publicKey) {\n    try {\n      // Verify the signature using the public key\n      const decoded = jwt.verify(token, publicKey, {\n        algorithms: ['RS256']\n      });\n\n      // Check token expiration\n      const currentTimestamp = Math.floor(Date.now() / 1000);\n      if (decoded.exp && decoded.exp < currentTimestamp) {\n        // Token has expired\n        return false;\n      }\n\n      // Additional checks on other claims if needed\n\n      // If all checks pass, the token is valid\n      return true;\n    } catch (error) {\n      // An error occurred during verification, token is invalid\n      return false;\n    }\n  }\n  isTokenJwt(jwt);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Usao si\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"jtw is \", jwt]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"logout\",\n        type: \"button\",\n        onClick: () => LogOut(),\n        children: \"LogOut\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"settings\",\n        type: \"button\",\n        onClick: () => window.location.href = \"/settings\",\n        children: \"Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n_s(User, \"PYrBa9pqcKfbDGKGnYY14AClEcg=\", false, function () {\n  return [useLocalState, useLocalState];\n});\n_c = User;\nexport default User;\nvar _c;\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["React","useLocalState","ValidateToken","LogOut","Settings","jwtDecode","jsxDEV","_jsxDEV","User","_s","jwt","setJwt","roles","setRoles","UseGetRoleFromJWT","decoded","console","log","authorities","authority","window","location","href","children","fileName","_jsxFileName","lineNumber","columnNumber","isTokenJwt","token","publicKey","verify","algorithms","currentTimestamp","Math","floor","Date","now","exp","error","id","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/benja/OneDrive/Desktop/progi/web/src/User/index.js"],"sourcesContent":["import React from 'react';\r\nimport { useLocalState } from '../util/useLocalStorage';\r\nimport ValidateToken from '../services/validatetoken';\r\nimport { LogOut } from '../services/LogOut';\r\nimport Settings from '../Settings';\r\nimport {jwtDecode} from \"jwt-decode\";\r\n\r\n\r\n\r\n\r\n\r\nconst User = () => {\r\n    const [jwt,setJwt] = useLocalState(\"\", \"jwt\");\r\n      const [roles,setRoles] = useLocalState(UseGetRoleFromJWT);\r\n      if(jwt){\r\n        const decoded = jwtDecode(jwt);\r\n        console.log(decoded.authorities);\r\n        console.log(\"Ovo vracas:\"+decoded.roles[0].authority );\r\n        if(decoded.roles[0].authority === \"ADMIN\"){\r\n            window.location.href = \"/admin\";\r\n            return <div>Loading....</div>\r\n         \r\n        }else if(decoded.roles[0].authority !== \"USER\"){\r\n            window.location.href = \"/welcome\";\r\n            return <div>Loading....</div>\r\n        }\r\n      }\r\n\r\n      function UseGetRoleFromJWT(){    \r\n        if(jwt){\r\n          const decoded = jwtDecode(jwt);\r\n          console.log(decoded.authorities);\r\n          \r\n          return decoded.roles[0].authority;\r\n        }\r\n        else{\r\n          return \"\";\r\n        }\r\n    }\r\n    \r\n    console.log(\"idem dalje\");\r\n\r\n    function isTokenJwt(token, publicKey) {\r\n        try {\r\n          // Verify the signature using the public key\r\n          const decoded = jwt.verify(token, publicKey, { algorithms: ['RS256'] });\r\n      \r\n          // Check token expiration\r\n          const currentTimestamp = Math.floor(Date.now() / 1000);\r\n          if (decoded.exp && decoded.exp < currentTimestamp) {\r\n            // Token has expired\r\n            return LogOut();\r\n          }\r\n      \r\n          // Additional checks on other claims if needed\r\n      \r\n          // If all checks pass, the token is valid\r\n          return true;\r\n        } catch (error) {\r\n          // An error occurred during verification, token is invalid\r\n          return LogOut();\r\n        }\r\n      \r\n      }\r\n\r\n      function isTokenJwt(token, publicKey) {\r\n        try {\r\n          // Verify the signature using the public key\r\n          const decoded = jwt.verify(token, publicKey, { algorithms: ['RS256'] });\r\n      \r\n          // Check token expiration\r\n          const currentTimestamp = Math.floor(Date.now() / 1000);\r\n          if (decoded.exp && decoded.exp < currentTimestamp) {\r\n            // Token has expired\r\n            return false;\r\n          }\r\n      \r\n          // Additional checks on other claims if needed\r\n      \r\n          // If all checks pass, the token is valid\r\n          return true;\r\n        } catch (error) {\r\n          // An error occurred during verification, token is invalid\r\n          return false;\r\n        }\r\n      \r\n      }\r\n\r\n       isTokenJwt(jwt);\r\n\r\n    \r\n    \r\n\r\n\r\n    \r\n\r\n    return (\r\n        <div>\r\n\r\n            <h1>Usao si</h1>\r\n            <div>jtw is {jwt}</div>\r\n            <div>\r\n            <button id=\"logout\" type=\"button\" onClick={() => LogOut()}>LogOut</button>\r\n            </div>\r\n\r\n            <div>\r\n            <button id=\"settings\" type=\"button\" onClick={() => window.location.href = \"/settings\"}>Settings</button>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,yBAAyB;AACvD,OAAOC,aAAa,MAAM,2BAA2B;AACrD,SAASC,MAAM,QAAQ,oBAAoB;AAC3C,OAAOC,QAAQ,MAAM,aAAa;AAClC,SAAQC,SAAS,QAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMrC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,GAAG,EAACC,MAAM,CAAC,GAAGV,aAAa,CAAC,EAAE,EAAE,KAAK,CAAC;EAC3C,MAAM,CAACW,KAAK,EAACC,QAAQ,CAAC,GAAGZ,aAAa,CAACa,iBAAiB,CAAC;EACzD,IAAGJ,GAAG,EAAC;IACL,MAAMK,OAAO,GAAGV,SAAS,CAACK,GAAG,CAAC;IAC9BM,OAAO,CAACC,GAAG,CAACF,OAAO,CAACG,WAAW,CAAC;IAChCF,OAAO,CAACC,GAAG,CAAC,aAAa,GAACF,OAAO,CAACH,KAAK,CAAC,CAAC,CAAC,CAACO,SAAU,CAAC;IACtD,IAAGJ,OAAO,CAACH,KAAK,CAAC,CAAC,CAAC,CAACO,SAAS,KAAK,OAAO,EAAC;MACtCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;MAC/B,oBAAOf,OAAA;QAAAgB,QAAA,EAAK;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAEjC,CAAC,MAAK,IAAGZ,OAAO,CAACH,KAAK,CAAC,CAAC,CAAC,CAACO,SAAS,KAAK,MAAM,EAAC;MAC3CC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,UAAU;MACjC,oBAAOf,OAAA;QAAAgB,QAAA,EAAK;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IACjC;EACF;EAEA,SAASb,iBAAiBA,CAAA,EAAE;IAC1B,IAAGJ,GAAG,EAAC;MACL,MAAMK,OAAO,GAAGV,SAAS,CAACK,GAAG,CAAC;MAC9BM,OAAO,CAACC,GAAG,CAACF,OAAO,CAACG,WAAW,CAAC;MAEhC,OAAOH,OAAO,CAACH,KAAK,CAAC,CAAC,CAAC,CAACO,SAAS;IACnC,CAAC,MACG;MACF,OAAO,EAAE;IACX;EACJ;EAEAH,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;EAEzB,SAASW,UAAUA,CAACC,KAAK,EAAEC,SAAS,EAAE;IAClC,IAAI;MACF;MACA,MAAMf,OAAO,GAAGL,GAAG,CAACqB,MAAM,CAACF,KAAK,EAAEC,SAAS,EAAE;QAAEE,UAAU,EAAE,CAAC,OAAO;MAAE,CAAC,CAAC;;MAEvE;MACA,MAAMC,gBAAgB,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;MACtD,IAAItB,OAAO,CAACuB,GAAG,IAAIvB,OAAO,CAACuB,GAAG,GAAGL,gBAAgB,EAAE;QACjD;QACA,OAAO9B,MAAM,CAAC,CAAC;MACjB;;MAEA;;MAEA;MACA,OAAO,IAAI;IACb,CAAC,CAAC,OAAOoC,KAAK,EAAE;MACd;MACA,OAAOpC,MAAM,CAAC,CAAC;IACjB;EAEF;EAEA,SAASyB,UAAUA,CAACC,KAAK,EAAEC,SAAS,EAAE;IACpC,IAAI;MACF;MACA,MAAMf,OAAO,GAAGL,GAAG,CAACqB,MAAM,CAACF,KAAK,EAAEC,SAAS,EAAE;QAAEE,UAAU,EAAE,CAAC,OAAO;MAAE,CAAC,CAAC;;MAEvE;MACA,MAAMC,gBAAgB,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;MACtD,IAAItB,OAAO,CAACuB,GAAG,IAAIvB,OAAO,CAACuB,GAAG,GAAGL,gBAAgB,EAAE;QACjD;QACA,OAAO,KAAK;MACd;;MAEA;;MAEA;MACA,OAAO,IAAI;IACb,CAAC,CAAC,OAAOM,KAAK,EAAE;MACd;MACA,OAAO,KAAK;IACd;EAEF;EAECX,UAAU,CAAClB,GAAG,CAAC;EAQlB,oBACIH,OAAA;IAAAgB,QAAA,gBAEIhB,OAAA;MAAAgB,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBpB,OAAA;MAAAgB,QAAA,GAAK,SAAO,EAACb,GAAG;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACvBpB,OAAA;MAAAgB,QAAA,eACAhB,OAAA;QAAQiC,EAAE,EAAC,QAAQ;QAACC,IAAI,EAAC,QAAQ;QAACC,OAAO,EAAEA,CAAA,KAAMvC,MAAM,CAAC,CAAE;QAAAoB,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrE,CAAC,eAENpB,OAAA;MAAAgB,QAAA,eACAhB,OAAA;QAAQiC,EAAE,EAAC,UAAU;QAACC,IAAI,EAAC,QAAQ;QAACC,OAAO,EAAEA,CAAA,KAAMtB,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,WAAY;QAAAC,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEd,CAAC;AAAClB,EAAA,CApGID,IAAI;EAAA,QACeP,aAAa,EACPA,aAAa;AAAA;AAAA0C,EAAA,GAFtCnC,IAAI;AAsGV,eAAeA,IAAI;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}