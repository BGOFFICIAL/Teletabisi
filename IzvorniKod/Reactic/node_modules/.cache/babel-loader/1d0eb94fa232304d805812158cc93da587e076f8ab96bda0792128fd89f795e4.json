{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\npral\\\\OneDrive\\\\Dokumenti\\\\GitHub\\\\Teletabisi\\\\IzvorniKod\\\\Reactic\\\\src\\\\App.js\";\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport { useLocalState } from './util/useLocalStorage';\nimport { Route, Routes, Navigate } from 'react-router-dom';\nimport Search from './SearchForUser';\nimport User from './User';\nimport Welcome from './Welcome';\nimport PrivateRoutes from './PrivateRoutes';\nimport Settings from './Settings';\nimport { jwtDecode } from \"jwt-decode\";\nimport Admin from './Adminic';\nimport Register from './register';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport Employee from './Employee';\nimport Login from './Loginic/Login';\nimport Mail from './Mail';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  // const [jwt, setJwt] = useLocalState(\"\");\n  // const [roles, setRoles] = useLocalState(UseGetRoleFromJWT);\n\n  /*\r\n    function UseGetRoleFromJWT() {\r\n  \r\n  \r\n      if (jwt) {\r\n        const decoded = jwtDecode(jwt);\r\n        console.log(decoded.authorities);\r\n        console.log(\"Ovo vracas:\" + decoded.roles[0].authority);\r\n      }\r\n  \r\n      if (jwt) {\r\n        const decoded = jwtDecode(jwt);\r\n        console.log(decoded.authorities);\r\n  \r\n        return decoded.roles[0].authority;\r\n      }\r\n      else {\r\n        return \"\";\r\n      }\r\n    }\r\n  \r\n  */\n\n  /*useEffect(() => {\r\n    console.log(\"Hello World\");\r\n    console.log(\"jwt is \" +jwt);\r\n    if(!jwt){\r\n      const reqBody= {\r\n      \"username\": \"example\",\r\n      \"password\": \"1234\",\r\n      };\r\n    \r\n  \n  \r\n      fetch(\"http://localhost:8080/api/v1/auth/authenticate\", {\r\n        \"headers\": {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n        \"method\": \"POST\",\r\n        body: JSON.stringify(reqBody),\r\n        })\r\n          .then(response => response.json())\r\n          .then(data => {\r\n         setJwt(data.token);\r\n        });\r\n  }}, [jwt]);\r\n  */\n\n  return (\n    /*#__PURE__*/\n    // <Admin />\n    //<Login />\n    //<Welcome />\n    // <Register />\n    _jsxDEV(Employee, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }, this)\n    //<Settings />\n    //<User />\n    // <Search />\n    // <Mail />\n\n    /*       <Routes>\r\n              <Route path=\"*\" element={<Navigate to=\"/welcome\"  />} />\r\n              <Route  element={\r\n              <PrivateRoutes/>} >\r\n                 <Route path=\"/user\" element={<User/>} />\r\n                 <Route path=\"/settings\" element={<Settings/>} />    \r\n                 <Route path=\"/admin\"  element={<Admin/>} />\r\n                 <Route path=\"/employee\"  element={<Employee/>}/>\r\n              </Route>\r\n              <Route path=\"/welcome\"  element={<Welcome/>} />\r\n              <Route path=\"/login\"  element={<Login/>} />\r\n              <Route path=\"/register\"  element={<Register/>} />\r\n         \r\n    \r\n           </Routes>\r\n      */\n  );\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","useLocalState","Route","Routes","Navigate","Search","User","Welcome","PrivateRoutes","Settings","jwtDecode","Admin","Register","Employee","Login","Mail","jsxDEV","_jsxDEV","App","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/npral/OneDrive/Dokumenti/GitHub/Teletabisi/IzvorniKod/Reactic/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport { useLocalState } from './util/useLocalStorage';\r\nimport { Route, Routes, Navigate } from 'react-router-dom';\r\nimport Search from './SearchForUser'\r\nimport User from './User';\r\nimport Welcome from './Welcome';\r\nimport PrivateRoutes from './PrivateRoutes';\r\nimport Settings from './Settings';\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport Admin from './Adminic';\r\nimport Register from './register';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport Employee from './Employee';\r\nimport Login from './Loginic/Login';\r\nimport Mail from './Mail'\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  // const [jwt, setJwt] = useLocalState(\"\");\r\n  // const [roles, setRoles] = useLocalState(UseGetRoleFromJWT);\r\n\r\n  /*\r\n    function UseGetRoleFromJWT() {\r\n  \r\n  \r\n      if (jwt) {\r\n        const decoded = jwtDecode(jwt);\r\n        console.log(decoded.authorities);\r\n        console.log(\"Ovo vracas:\" + decoded.roles[0].authority);\r\n      }\r\n  \r\n      if (jwt) {\r\n        const decoded = jwtDecode(jwt);\r\n        console.log(decoded.authorities);\r\n  \r\n        return decoded.roles[0].authority;\r\n      }\r\n      else {\r\n        return \"\";\r\n      }\r\n    }\r\n  \r\n  */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  /*useEffect(() => {\r\n    console.log(\"Hello World\");\r\n    console.log(\"jwt is \" +jwt);\r\n    if(!jwt){\r\n      const reqBody= {\r\n      \"username\": \"example\",\r\n      \"password\": \"1234\",\r\n      };\r\n\r\n  \r\n \r\n  \r\n      fetch(\"http://localhost:8080/api/v1/auth/authenticate\", {\r\n        \"headers\": {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n        \"method\": \"POST\",\r\n        body: JSON.stringify(reqBody),\r\n        })\r\n          .then(response => response.json())\r\n          .then(data => {\r\n         setJwt(data.token);\r\n        });\r\n  }}, [jwt]);\r\n*/\r\n\r\n\r\n\r\n  return (\r\n    // <Admin />\r\n    //<Login />\r\n    //<Welcome />\r\n    // <Register />\r\n    <Employee />\r\n    //<Settings />\r\n    //<User />\r\n    // <Search />\r\n    // <Mail />\r\n\r\n    /*       <Routes>\r\n              <Route path=\"*\" element={<Navigate to=\"/welcome\"  />} />\r\n              <Route  element={\r\n              <PrivateRoutes/>} >\r\n                 <Route path=\"/user\" element={<User/>} />\r\n                 <Route path=\"/settings\" element={<Settings/>} />    \r\n                 <Route path=\"/admin\"  element={<Admin/>} />\r\n                 <Route path=\"/employee\"  element={<Employee/>}/>\r\n              </Route>\r\n              <Route path=\"/welcome\"  element={<Welcome/>} />\r\n              <Route path=\"/login\"  element={<Login/>} />\r\n              <Route path=\"/register\"  element={<Register/>} />\r\n         \r\n \r\n \r\n           </Routes>\r\n      */\r\n  );\r\n\r\n\r\n}\r\n\r\nexport default App;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,WAAW;AAClB,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,KAAK,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,kBAAkB;AAC1D,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,SAAS,QAAQ,YAAY;AACtC,OAAOC,KAAK,MAAM,WAAW;AAC7B,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAO,sCAAsC;AAC7C,OAAO,4CAA4C;AACnD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,KAAK,MAAM,iBAAiB;AACnC,OAAOC,IAAI,MAAM,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAOzB,SAASC,GAAGA,CAAA,EAAG;EAEb;EACA;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EASE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAKE;IAAA;IACE;IACA;IACA;IACA;IACAD,OAAA,CAACJ,QAAQ;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;IACX;IACA;IACA;IACA;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAfI;AAoBJ;AAACC,EAAA,GA9FQL,GAAG;AAgGZ,eAAeA,GAAG;AAAC,IAAAK,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}