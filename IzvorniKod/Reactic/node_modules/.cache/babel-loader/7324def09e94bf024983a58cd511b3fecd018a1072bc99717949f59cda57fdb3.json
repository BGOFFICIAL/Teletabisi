{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\npral\\\\OneDrive\\\\Dokumenti\\\\GitHub\\\\Teletabisi\\\\IzvorniKod\\\\Reactic\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useLocalState } from \"./util/useLocalStorage\";\nimport { useState, useEffect } from \"react\";\nimport { Route, Routes, Navigate } from \"react-router-dom\";\nimport User from \"./Sites/User/user\";\nimport Welcome from \"./Sites/Welcome/welcome\";\nimport PrivateRoutes from \"./util/PrivateRoute/privateroutes\";\nimport Settings from \"./Sites/Settings/settings\";\nimport { jwtDecode } from \"jwt-decode\";\nimport Admin from \"./Sites/Admin/admin\";\nimport Register from \"./Sites/Register/register\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Employee from \"./Sites/Employee/employee\";\nimport Login from \"./Sites/Login/Login\";\nimport AddEquipment from \"./Sites/AddEquipment/AddEquipment\";\nimport AddRooms from \"./Sites/AddRooms/AddRooms\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [jwt, setJwt] = useLocalState();\n  const [roles, setRoles] = useState('');\n\n  /*\r\n   useEffect(() => {\r\n     function updateRoles() {\r\n         if (jwt) {\r\n             console.log(jwt);\r\n             const decoded = jwtDecode(jwt);\r\n             const rolespom = decoded.roles;\r\n  \n             if (rolespom && rolespom.length > 0) {\r\n                 const role = rolespom[0];\r\n                 \r\n                 localStorage.setItem(\"roles\", role);\r\n                 setRoles(role);\r\n                \r\n             } else {\r\n                 console.log(\"No roles found in token\");\r\n             }\r\n         } else {\r\n             localStorage.setItem(\"roles\", \"no role\"); // remove roles from localStorage\r\n          \r\n         }\r\n     }\r\n  \n     const handleStorageChange = (event) => {\r\n         if (event.key === \"jwt\" || event.key === \"roles\") {\r\n             // Run the updateRoles function when jwt or roles change in localStorage\r\n             updateRoles();\r\n         }\r\n     };\r\n  \n     // Add event listener to the window\r\n     window.addEventListener(\"storage\", handleStorageChange);\r\n  \n     // Run the initial updateRoles when the component mounts\r\n     updateRoles();\r\n  \n     //Clean up the event listener when the component unmounts\r\n     return () => {\r\n         window.removeEventListener(\"storage\", handleStorageChange);\r\n     };\r\n  }, [jwt]);\r\n  \n  */\n\n  /* \r\n  useEffect(() => {\r\n    function updateRoles() {\r\n      if (jwt) {\r\n        console.log(jwt);\r\n        const decoded = jwtDecode(jwt);\r\n        const roles = decoded.roles;\r\n          if (roles && roles.length > 0) {\r\n          const role = roles[0];\r\n          console.log(\"Role:\" + role);\r\n          localStorage.setItem(\"roles\", role);\r\n          console.log(\"Success\");\r\n        } else {\r\n          console.log(\"No roles found in token\");\r\n        }\r\n      } else {\r\n        localStorage.setItem(\"roles\",\"no role\"); // remove roles from localStorage\r\n      }\r\n    }\r\n      updateRoles();\r\n  }, [jwt]);*/\n\n  /*function UseGetRoleFromJWT() {\r\n    if (jwt) {\r\n      const decoded = jwtDecode(jwt);\r\n      console.log(\"Ovo vracas:\" + decoded.roles[0].authority);\r\n      return decoded.roles[0].authority;\r\n    }\r\n       else {\r\n      return \"nema rolu\";\r\n    }\r\n  }*/\n\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"*\",\n      element: /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/welcome\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      element: /*#__PURE__*/_jsxDEV(PrivateRoutes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/users\",\n        element: /*#__PURE__*/_jsxDEV(User, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/settings\",\n        element: /*#__PURE__*/_jsxDEV(Settings, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admin\",\n        element: /*#__PURE__*/_jsxDEV(Admin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/employee\",\n        element: /*#__PURE__*/_jsxDEV(Employee, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/AddEquipment\",\n        element: /*#__PURE__*/_jsxDEV(AddEquipment, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/AddRooms\",\n        element: /*#__PURE__*/_jsxDEV(AddRooms, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/welcome\",\n      element: /*#__PURE__*/_jsxDEV(Welcome, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/login\",\n      element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/register\",\n      element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 40\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"yViJ9ICsRu2MB6cKdFK2PRFN7pQ=\", false, function () {\n  return [useLocalState];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useLocalState","useState","useEffect","Route","Routes","Navigate","User","Welcome","PrivateRoutes","Settings","jwtDecode","Admin","Register","Employee","Login","AddEquipment","AddRooms","jsxDEV","_jsxDEV","App","_s","jwt","setJwt","roles","setRoles","children","path","element","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/npral/OneDrive/Dokumenti/GitHub/Teletabisi/IzvorniKod/Reactic/src/App.js"],"sourcesContent":["import \"./App.css\";\r\n\r\nimport { useLocalState } from \"./util/useLocalStorage\";\r\nimport { useState,useEffect } from \"react\";\r\nimport { Route, Routes, Navigate } from \"react-router-dom\";\r\nimport User from \"./Sites/User/user\";\r\nimport Welcome from \"./Sites/Welcome/welcome\";\r\nimport PrivateRoutes from \"./util/PrivateRoute/privateroutes\";\r\nimport Settings from \"./Sites/Settings/settings\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport Admin from \"./Sites/Admin/admin\";\r\nimport Register from \"./Sites/Register/register\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Employee from \"./Sites/Employee/employee\";\r\nimport Login from \"./Sites/Login/Login\";\r\nimport AddEquipment from \"./Sites/AddEquipment/AddEquipment\";\r\nimport AddRooms from \"./Sites/AddRooms/AddRooms\";\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n \r\n  \r\n\r\n  \r\n  const [jwt, setJwt] = useLocalState();\r\n  const [roles, setRoles] = useState('');\r\n \r\n \r\n /*\r\n  useEffect(() => {\r\n    function updateRoles() {\r\n        if (jwt) {\r\n            console.log(jwt);\r\n            const decoded = jwtDecode(jwt);\r\n            const rolespom = decoded.roles;\r\n\r\n            if (rolespom && rolespom.length > 0) {\r\n                const role = rolespom[0];\r\n                \r\n                localStorage.setItem(\"roles\", role);\r\n                setRoles(role);\r\n               \r\n            } else {\r\n                console.log(\"No roles found in token\");\r\n            }\r\n        } else {\r\n            localStorage.setItem(\"roles\", \"no role\"); // remove roles from localStorage\r\n         \r\n        }\r\n    }\r\n\r\n    const handleStorageChange = (event) => {\r\n        if (event.key === \"jwt\" || event.key === \"roles\") {\r\n            // Run the updateRoles function when jwt or roles change in localStorage\r\n            updateRoles();\r\n        }\r\n    };\r\n\r\n    // Add event listener to the window\r\n    window.addEventListener(\"storage\", handleStorageChange);\r\n\r\n    // Run the initial updateRoles when the component mounts\r\n    updateRoles();\r\n\r\n    //Clean up the event listener when the component unmounts\r\n    return () => {\r\n        window.removeEventListener(\"storage\", handleStorageChange);\r\n    };\r\n}, [jwt]);\r\n\r\n */\r\n \r\n \r\n \r\n  /* \r\n  useEffect(() => {\r\n    function updateRoles() {\r\n      if (jwt) {\r\n        console.log(jwt);\r\n        const decoded = jwtDecode(jwt);\r\n        const roles = decoded.roles;\r\n\r\n        if (roles && roles.length > 0) {\r\n          const role = roles[0];\r\n          console.log(\"Role:\" + role);\r\n          localStorage.setItem(\"roles\", role);\r\n          console.log(\"Success\");\r\n        } else {\r\n          console.log(\"No roles found in token\");\r\n        }\r\n      } else {\r\n        localStorage.setItem(\"roles\",\"no role\"); // remove roles from localStorage\r\n      }\r\n    }\r\n\r\n    updateRoles();\r\n  }, [jwt]);*/\r\n\r\n\r\n\r\n \r\n\r\n  \r\n  \r\n\r\n  /*function UseGetRoleFromJWT() {\r\n    if (jwt) {\r\n      const decoded = jwtDecode(jwt);\r\n      console.log(\"Ovo vracas:\" + decoded.roles[0].authority);\r\n      return decoded.roles[0].authority;\r\n    }\r\n\r\n     else {\r\n      return \"nema rolu\";\r\n    }\r\n  }*/\r\n\r\n \r\n\r\n\r\n\r\n  return (\r\n    <Routes>\r\n      <Route path=\"*\" element={<Navigate to=\"/welcome\" />} />\r\n      <Route element={\r\n      <PrivateRoutes />}>\r\n        <Route path=\"/users\" element={ <User /> } />\r\n        <Route path=\"/settings\" element={<Settings />} />\r\n        <Route path=\"/admin\" element={ <Admin />} />\r\n        <Route path=\"/employee\" element={<Employee />} />\r\n        <Route path=\"/AddEquipment\" element={<AddEquipment />} />\r\n        <Route path=\"/AddRooms\" element={<AddRooms />} />\r\n       \r\n   \r\n      </Route>\r\n      <Route path=\"/welcome\" element={<Welcome />} />\r\n      <Route path=\"/login\" element={<Login />} />\r\n      <Route path=\"/register\" element={<Register />} />\r\n    </Routes>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}